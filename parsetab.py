
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMA COMMENT CONJ COUNT DDOT DEF DEFN DIVIDE DO FALSE FLOAT FOR GET ID IF IGUAL LBRACE LCOR LPAREN MAYORQUE MENORQUE MINUS MOD NOT NTH NUMBER NUMERAL OR PLUS POP PRINT PRINTF PRINTLN QUOTE RBRACE RCOR READ RPAREN STR STRING THEN TIMES TRUE WHILEgeneral : LPAREN expression RPAREN\n            | LPAREN comparacion RPAREN\n            | LPAREN sentenciaif RPAREN\n            | LPAREN sentenciawhile RPAREN\n            | LPAREN asignacion RPAREN\n            | LPAREN imprimir RPAREN\n            | LPAREN asignacion_funcion RPAREN\n            | function_call\n            | funcionstruct\n            | sentenciado\n            | read\n            | general generalexpression : operadoresMat factores\n        factores : factor factor\n        | factor factores\n    comparacion : operadoresComp factor factor operadoresMat : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n                    | MODoperadoresComp : MAYORQUE\n                    | MENORQUE\n                    | IGUAL\n                    | OR\n                    | AND\n                    | NOToperadoresPrint : PRINT\n                    | PRINTLNread : LPAREN READ RPARENfactor : NUMBER\n            | ID\n            | FLOAT\n            | booleanosfactor : LPAREN expression RPAREN\n    asignacion : DEF ID factor\n                | DEF ID STRING\n                | DEF ID struct\n                | DEF ID funcionstruct\n                | DEF ID read\n                | DEF ID function_callbooleanos : TRUE\n        | FALSE\n    imprimir : operadoresPrint factor\n                | operadoresPrint STRING\n                | PRINTF valorlsentenciado : LPAREN DO general RPARENsentenciaif : IF LPAREN comparacion RPAREN general\n                | IF LPAREN comparacion RPAREN sentenciado sentenciado\n        sentenciawhile : WHILE LPAREN comparacion RPAREN sentenciado\n    \n      struct : lista\n            | vector\n            | mapa\n            | conjuntolista : QUOTE LPAREN valorl RPARENvector : LCOR valorl RCORmapa : LBRACE repetirclave RBRACEconjunto : NUMERAL LBRACE valorl RBRACEclavevalor : ID DDOT valor repetirclave : clavevalor\n                    | clavevalor COMA repetirclavevalor : NUMBER\n                    | ID\n                    | STRING\n                    | booleanos\n                    | FLOATvalorl : NUMBER\n                |   ID\n                |   STRING\n                |   booleanos\n                | FLOAT\n                | valorl valorl\n        funcionstruct : conjfunction\n        | LPAREN STR STRING strings RPAREN\n        | LPAREN STR ID strings RPAREN\n        | LPAREN GET conjunto NUMBER RPAREN\n        | LPAREN GET conjunto ID RPAREN\n        | LPAREN NTH lista NUMBER RPAREN\n        | LPAREN NTH lista ID RPAREN\n        | LPAREN POP vector RPAREN\n        | LPAREN COUNT STRING RPAREN\n        | LPAREN COUNT ID RPAREN\n    \n        conjfunction : LPAREN CONJ lista NUMBER RPAREN\n        | LPAREN CONJ lista ID RPAREN\n        | LPAREN CONJ conjunto NUMBER RPAREN\n        | LPAREN CONJ conjunto ID RPAREN\n        | LPAREN CONJ vector NUMBER RPAREN\n        | LPAREN CONJ vector ID RPAREN\n    \n        strings : valor_strings\n        | valor_strings strings\n    \n        valor_strings : STRING\n        | ID\n    \n        asignacion_funcion : DEFN ID LCOR RCOR general\n        | DEFN ID LCOR parametros RCOR general\n    \n        parametros : valores\n    \n        valores : ID\n        | ID valores\n    \n        function_call : LPAREN ID RPAREN\n        | LPAREN ID argumentos RPAREN\n    \n        argumentos : valor_funcion\n        | valor_funcion argumentos\n    \n        valor_funcion : valor\n        | funcionstruct\n        | function_call\n        | struct\n        | expression\n        | comparacion\n    '
    
_lr_action_items = {'LPAREN':([0,1,3,4,5,6,7,8,16,22,25,26,27,28,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,90,91,92,93,94,95,97,100,110,127,128,129,130,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,178,181,183,184,188,189,191,],[2,2,-8,-9,-10,-11,-73,2,53,2,96,96,98,99,96,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-1,-2,-3,-4,-5,-6,-7,-63,-98,53,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,112,2,-30,-13,96,-31,-32,-33,-34,96,149,-99,-80,-81,-82,-47,96,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,182,185,2,-55,-58,2,185,2,2,2,]),'$end':([1,3,4,5,6,7,8,46,47,48,49,50,51,52,55,86,110,127,128,129,130,158,160,161,162,163,164,165,166,167,168,169,170,],[0,-8,-9,-10,-11,-73,-12,-1,-2,-3,-4,-5,-6,-7,-98,-30,-99,-80,-81,-82,-47,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,]),'ID':([2,7,16,17,21,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,78,79,80,81,87,88,89,90,91,92,93,94,95,97,100,103,104,105,106,107,108,110,112,113,117,118,120,121,127,128,129,137,138,140,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,174,178,181,182,],[16,-73,54,79,84,93,93,100,93,105,109,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,16,-63,-98,54,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,105,116,121,121,124,126,132,134,136,-13,93,-31,-32,-33,-34,93,93,105,-67,-68,-69,-70,-71,-99,105,105,105,-91,121,-92,-80,-81,-82,93,-15,-16,16,105,174,105,-56,-57,116,54,105,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,174,-55,-58,16,]),'STR':([2,53,149,182,],[17,17,17,17,]),'GET':([2,53,149,182,],[18,18,18,18,]),'NTH':([2,53,149,182,],[19,19,19,19,]),'POP':([2,53,149,182,],[20,20,20,20,]),'COUNT':([2,53,149,182,],[21,21,21,21,]),'DO':([2,182,185,],[22,22,22,]),'READ':([2,149,182,],[23,23,23,]),'CONJ':([2,53,149,182,],[24,24,24,24,]),'IF':([2,182,],[27,27,]),'WHILE':([2,182,],[28,28,]),'DEF':([2,182,],[29,29,]),'PRINTF':([2,182,],[31,31,]),'DEFN':([2,182,],[32,32,]),'PLUS':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,96,110,127,128,129,137,138,140,149,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[33,-73,33,-63,-98,33,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,33,-99,-80,-81,-82,-14,-15,-16,33,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,33,]),'MINUS':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,96,110,127,128,129,137,138,140,149,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[34,-73,34,-63,-98,34,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,34,-99,-80,-81,-82,-14,-15,-16,34,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,34,]),'TIMES':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,96,110,127,128,129,137,138,140,149,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[35,-73,35,-63,-98,35,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,35,-99,-80,-81,-82,-14,-15,-16,35,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,35,]),'DIVIDE':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,96,110,127,128,129,137,138,140,149,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[36,-73,36,-63,-98,36,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,36,-99,-80,-81,-82,-14,-15,-16,36,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,36,]),'MOD':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,96,110,127,128,129,137,138,140,149,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[37,-73,37,-63,-98,37,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,37,-99,-80,-81,-82,-14,-15,-16,37,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,37,]),'MAYORQUE':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,98,99,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[38,-73,38,-63,-98,38,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,38,38,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,38,]),'MENORQUE':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,98,99,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[39,-73,39,-63,-98,39,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,39,39,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,39,]),'IGUAL':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,98,99,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[40,-73,40,-63,-98,40,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,40,40,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,40,]),'OR':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,98,99,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[41,-73,41,-63,-98,41,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,41,41,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,41,]),'AND':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,98,99,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[42,-73,42,-63,-98,42,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,42,42,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,42,]),'NOT':([2,7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,98,99,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,182,],[43,-73,43,-63,-98,43,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,43,43,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,43,]),'PRINT':([2,182,],[44,44,]),'PRINTLN':([2,182,],[45,45,]),'RPAREN':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,23,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,82,83,84,85,86,90,92,93,94,95,101,102,103,104,105,106,107,108,110,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,158,159,160,161,162,163,164,165,166,167,168,169,170,171,178,181,183,184,186,188,190,191,],[-8,-9,-10,-11,-73,-12,46,47,48,49,50,51,52,55,86,-1,-2,-3,-4,-5,-6,-7,-63,-98,110,-100,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,127,128,129,130,-30,-13,-31,-32,-33,-34,-44,-45,-46,-67,-68,-69,-70,-71,-99,-101,-91,158,-89,-92,160,161,162,163,164,-80,-81,-82,-47,165,166,167,168,169,170,-14,-15,171,-16,172,173,-36,-37,-38,-39,-40,-41,-72,178,-56,-57,-74,-90,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,-48,-10,-50,-93,-49,-94,]),'NUMBER':([7,16,25,26,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,80,81,87,88,89,90,91,92,93,94,95,97,100,103,104,105,106,107,108,110,112,113,117,127,128,129,137,138,140,150,152,153,154,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,],[-73,64,92,92,92,104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-63,-98,64,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,104,123,125,131,133,135,-13,92,-31,-32,-33,-34,92,92,104,-67,-68,-69,-70,-71,-99,104,104,104,-80,-81,-82,92,-15,-16,104,104,-56,-57,64,104,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,]),'STRING':([7,16,17,21,30,31,44,45,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,90,92,93,94,95,100,103,104,105,106,107,108,110,112,113,117,118,120,121,127,128,129,137,138,140,150,152,153,154,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,],[-73,65,78,83,102,106,-28,-29,-63,-98,65,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,106,118,118,-13,-31,-32,-33,-34,144,106,-67,-68,-69,-70,-71,-99,106,106,106,-91,118,-92,-80,-81,-82,-14,-15,-16,106,106,-56,-57,65,106,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,]),'FLOAT':([7,16,25,26,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,90,91,92,93,94,95,97,100,103,104,105,106,107,108,110,112,113,117,127,128,129,137,138,140,150,152,153,154,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,],[-73,67,94,94,94,108,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-63,-98,67,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,108,-13,94,-31,-32,-33,-34,94,94,108,-67,-68,-69,-70,-71,-99,108,108,108,-80,-81,-82,94,-15,-16,108,108,-56,-57,67,108,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,]),'TRUE':([7,16,25,26,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,90,91,92,93,94,95,97,100,103,104,105,106,107,108,110,112,113,117,127,128,129,137,138,140,150,152,153,154,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,],[-73,72,72,72,72,72,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-63,-98,72,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,72,-13,72,-31,-32,-33,-34,72,72,72,-67,-68,-69,-70,-71,-99,72,72,72,-80,-81,-82,72,-15,-16,72,72,-56,-57,72,72,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,]),'FALSE':([7,16,25,26,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,90,91,92,93,94,95,97,100,103,104,105,106,107,108,110,112,113,117,127,128,129,137,138,140,150,152,153,154,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,],[-73,73,73,73,73,73,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-63,-98,73,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,73,-13,73,-31,-32,-33,-34,73,73,73,-67,-68,-69,-70,-71,-99,73,73,73,-80,-81,-82,73,-15,-16,73,73,-56,-57,73,73,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,]),'QUOTE':([7,16,19,24,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,100,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,],[-73,74,74,74,-63,-98,74,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,74,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,]),'LCOR':([7,16,20,24,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,100,109,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,],[-73,75,75,75,-63,-98,75,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,75,151,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,]),'LBRACE':([7,16,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,90,92,93,94,95,100,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,],[-73,76,-63,-98,76,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,117,-13,-31,-32,-33,-34,76,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,]),'NUMERAL':([7,16,18,24,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,90,92,93,94,95,100,110,127,128,129,137,138,140,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,178,181,],[-73,77,77,77,-63,-98,77,-102,-103,-104,-105,-106,-107,-62,-64,-65,-66,-54,-51,-52,-53,-42,-43,-13,-31,-32,-33,-34,77,-99,-80,-81,-82,-14,-15,-16,-56,-57,-74,-75,-76,-77,-78,-79,-83,-84,-85,-86,-87,-88,-35,-55,-58,]),'COMA':([54,64,65,66,67,72,73,115,180,],[-63,-62,-64,-65,-66,-42,-43,155,-59,]),'RBRACE':([54,64,65,66,67,72,73,104,105,106,107,108,114,115,150,157,179,180,],[-63,-62,-64,-65,-66,-42,-43,-67,-68,-69,-70,-71,154,-60,-72,181,-61,-59,]),'RCOR':([72,73,104,105,106,107,108,113,150,151,174,176,177,187,],[-42,-43,-67,-68,-69,-70,-71,153,-72,175,-96,189,-95,-97,]),'DDOT':([116,],[156,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'general':([0,1,8,22,85,172,175,183,188,189,191,],[1,8,8,85,8,183,188,8,8,191,8,]),'function_call':([0,1,8,16,22,57,85,100,172,175,183,188,189,191,],[3,3,3,60,3,60,3,148,3,3,3,3,3,3,]),'funcionstruct':([0,1,8,16,22,57,85,100,172,175,183,188,189,191,],[4,4,4,59,4,59,4,146,4,4,4,4,4,4,]),'sentenciado':([0,1,8,22,85,172,173,175,183,184,188,189,191,],[5,5,5,5,5,184,186,5,5,190,5,5,5,]),'read':([0,1,8,22,85,100,172,175,183,188,189,191,],[6,6,6,6,6,147,6,6,6,6,6,6,]),'conjfunction':([0,1,8,16,22,57,85,100,172,175,183,188,189,191,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expression':([2,16,57,96,149,182,],[9,62,62,139,139,9,]),'comparacion':([2,16,57,98,99,182,],[10,63,63,141,142,10,]),'sentenciaif':([2,182,],[11,11,]),'sentenciawhile':([2,182,],[12,12,]),'asignacion':([2,182,],[13,13,]),'imprimir':([2,182,],[14,14,]),'asignacion_funcion':([2,182,],[15,15,]),'operadoresMat':([2,16,57,96,149,182,],[25,25,25,25,25,25,]),'operadoresComp':([2,16,57,98,99,182,],[26,26,26,26,26,26,]),'operadoresPrint':([2,182,],[30,30,]),'argumentos':([16,57,],[56,111,]),'valor_funcion':([16,57,],[57,57,]),'valor':([16,57,156,],[58,58,180,]),'struct':([16,57,100,],[61,61,145,]),'booleanos':([16,25,26,30,31,57,75,91,97,100,103,112,113,117,137,150,152,156,157,],[66,95,95,95,107,66,107,95,95,95,107,107,107,107,95,107,107,66,107,]),'conjunto':([16,18,24,57,100,],[68,80,88,68,68,]),'lista':([16,19,24,57,100,],[69,81,87,69,69,]),'vector':([16,20,24,57,100,],[70,82,89,70,70,]),'mapa':([16,57,100,],[71,71,71,]),'factores':([25,91,137,],[90,138,138,]),'factor':([25,26,30,91,97,100,137,],[91,97,101,137,140,143,137,]),'valorl':([31,75,103,112,113,117,150,152,157,],[103,113,150,152,150,157,150,150,150,]),'repetirclave':([76,155,],[114,179,]),'clavevalor':([76,155,],[115,115,]),'strings':([78,79,120,],[119,122,159,]),'valor_strings':([78,79,120,],[120,120,120,]),'parametros':([151,],[176,]),'valores':([151,174,],[177,187,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> general","S'",1,None,None,None),
  ('general -> LPAREN expression RPAREN','general',3,'p_expression_general','sintactico.py',11),
  ('general -> LPAREN comparacion RPAREN','general',3,'p_expression_general','sintactico.py',12),
  ('general -> LPAREN sentenciaif RPAREN','general',3,'p_expression_general','sintactico.py',13),
  ('general -> LPAREN sentenciawhile RPAREN','general',3,'p_expression_general','sintactico.py',14),
  ('general -> LPAREN asignacion RPAREN','general',3,'p_expression_general','sintactico.py',15),
  ('general -> LPAREN imprimir RPAREN','general',3,'p_expression_general','sintactico.py',16),
  ('general -> LPAREN asignacion_funcion RPAREN','general',3,'p_expression_general','sintactico.py',17),
  ('general -> function_call','general',1,'p_expression_general','sintactico.py',18),
  ('general -> funcionstruct','general',1,'p_expression_general','sintactico.py',19),
  ('general -> sentenciado','general',1,'p_expression_general','sintactico.py',20),
  ('general -> read','general',1,'p_expression_general','sintactico.py',21),
  ('general -> general general','general',2,'p_expression_general','sintactico.py',22),
  ('expression -> operadoresMat factores','expression',2,'p_expression_mat','sintactico.py',27),
  ('factores -> factor factor','factores',2,'p_factores','sintactico.py',33),
  ('factores -> factor factores','factores',2,'p_factores','sintactico.py',34),
  ('comparacion -> operadoresComp factor factor','comparacion',3,'p_comparacion','sintactico.py',37),
  ('operadoresMat -> PLUS','operadoresMat',1,'p_operadoresMat','sintactico.py',42),
  ('operadoresMat -> MINUS','operadoresMat',1,'p_operadoresMat','sintactico.py',43),
  ('operadoresMat -> TIMES','operadoresMat',1,'p_operadoresMat','sintactico.py',44),
  ('operadoresMat -> DIVIDE','operadoresMat',1,'p_operadoresMat','sintactico.py',45),
  ('operadoresMat -> MOD','operadoresMat',1,'p_operadoresMat','sintactico.py',46),
  ('operadoresComp -> MAYORQUE','operadoresComp',1,'p_operadoresComp','sintactico.py',49),
  ('operadoresComp -> MENORQUE','operadoresComp',1,'p_operadoresComp','sintactico.py',50),
  ('operadoresComp -> IGUAL','operadoresComp',1,'p_operadoresComp','sintactico.py',51),
  ('operadoresComp -> OR','operadoresComp',1,'p_operadoresComp','sintactico.py',52),
  ('operadoresComp -> AND','operadoresComp',1,'p_operadoresComp','sintactico.py',53),
  ('operadoresComp -> NOT','operadoresComp',1,'p_operadoresComp','sintactico.py',54),
  ('operadoresPrint -> PRINT','operadoresPrint',1,'p_operadoresPrint','sintactico.py',57),
  ('operadoresPrint -> PRINTLN','operadoresPrint',1,'p_operadoresPrint','sintactico.py',58),
  ('read -> LPAREN READ RPAREN','read',3,'p_read','sintactico.py',61),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',66),
  ('factor -> ID','factor',1,'p_factor_num','sintactico.py',67),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',68),
  ('factor -> booleanos','factor',1,'p_factor_num','sintactico.py',69),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintactico.py',72),
  ('asignacion -> DEF ID factor','asignacion',3,'p_asignacion','sintactico.py',76),
  ('asignacion -> DEF ID STRING','asignacion',3,'p_asignacion','sintactico.py',77),
  ('asignacion -> DEF ID struct','asignacion',3,'p_asignacion','sintactico.py',78),
  ('asignacion -> DEF ID funcionstruct','asignacion',3,'p_asignacion','sintactico.py',79),
  ('asignacion -> DEF ID read','asignacion',3,'p_asignacion','sintactico.py',80),
  ('asignacion -> DEF ID function_call','asignacion',3,'p_asignacion','sintactico.py',81),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',87),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',88),
  ('imprimir -> operadoresPrint factor','imprimir',2,'p_imprimir','sintactico.py',92),
  ('imprimir -> operadoresPrint STRING','imprimir',2,'p_imprimir','sintactico.py',93),
  ('imprimir -> PRINTF valorl','imprimir',2,'p_imprimir','sintactico.py',94),
  ('sentenciado -> LPAREN DO general RPAREN','sentenciado',4,'p_sentenciado','sintactico.py',99),
  ('sentenciaif -> IF LPAREN comparacion RPAREN general','sentenciaif',5,'p_sentenciaif','sintactico.py',104),
  ('sentenciaif -> IF LPAREN comparacion RPAREN sentenciado sentenciado','sentenciaif',6,'p_sentenciaif','sintactico.py',105),
  ('sentenciawhile -> WHILE LPAREN comparacion RPAREN sentenciado','sentenciawhile',5,'p_sentenciawhile','sintactico.py',112),
  ('struct -> lista','struct',1,'p_struct','sintactico.py',119),
  ('struct -> vector','struct',1,'p_struct','sintactico.py',120),
  ('struct -> mapa','struct',1,'p_struct','sintactico.py',121),
  ('struct -> conjunto','struct',1,'p_struct','sintactico.py',122),
  ('lista -> QUOTE LPAREN valorl RPAREN','lista',4,'p_lista','sintactico.py',127),
  ('vector -> LCOR valorl RCOR','vector',3,'p_vector','sintactico.py',130),
  ('mapa -> LBRACE repetirclave RBRACE','mapa',3,'p_mapa','sintactico.py',133),
  ('conjunto -> NUMERAL LBRACE valorl RBRACE','conjunto',4,'p_conjunto','sintactico.py',136),
  ('clavevalor -> ID DDOT valor','clavevalor',3,'p_clavevalor','sintactico.py',139),
  ('repetirclave -> clavevalor','repetirclave',1,'p_repetirclave','sintactico.py',142),
  ('repetirclave -> clavevalor COMA repetirclave','repetirclave',3,'p_repetirclave','sintactico.py',143),
  ('valor -> NUMBER','valor',1,'p_valor','sintactico.py',145),
  ('valor -> ID','valor',1,'p_valor','sintactico.py',146),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',147),
  ('valor -> booleanos','valor',1,'p_valor','sintactico.py',148),
  ('valor -> FLOAT','valor',1,'p_valor','sintactico.py',149),
  ('valorl -> NUMBER','valorl',1,'p_valorl','sintactico.py',152),
  ('valorl -> ID','valorl',1,'p_valorl','sintactico.py',153),
  ('valorl -> STRING','valorl',1,'p_valorl','sintactico.py',154),
  ('valorl -> booleanos','valorl',1,'p_valorl','sintactico.py',155),
  ('valorl -> FLOAT','valorl',1,'p_valorl','sintactico.py',156),
  ('valorl -> valorl valorl','valorl',2,'p_valorl','sintactico.py',157),
  ('funcionstruct -> conjfunction','funcionstruct',1,'p_funcionstruct','sintactico.py',161),
  ('funcionstruct -> LPAREN STR STRING strings RPAREN','funcionstruct',5,'p_funcionstruct','sintactico.py',162),
  ('funcionstruct -> LPAREN STR ID strings RPAREN','funcionstruct',5,'p_funcionstruct','sintactico.py',163),
  ('funcionstruct -> LPAREN GET conjunto NUMBER RPAREN','funcionstruct',5,'p_funcionstruct','sintactico.py',164),
  ('funcionstruct -> LPAREN GET conjunto ID RPAREN','funcionstruct',5,'p_funcionstruct','sintactico.py',165),
  ('funcionstruct -> LPAREN NTH lista NUMBER RPAREN','funcionstruct',5,'p_funcionstruct','sintactico.py',166),
  ('funcionstruct -> LPAREN NTH lista ID RPAREN','funcionstruct',5,'p_funcionstruct','sintactico.py',167),
  ('funcionstruct -> LPAREN POP vector RPAREN','funcionstruct',4,'p_funcionstruct','sintactico.py',168),
  ('funcionstruct -> LPAREN COUNT STRING RPAREN','funcionstruct',4,'p_funcionstruct','sintactico.py',169),
  ('funcionstruct -> LPAREN COUNT ID RPAREN','funcionstruct',4,'p_funcionstruct','sintactico.py',170),
  ('conjfunction -> LPAREN CONJ lista NUMBER RPAREN','conjfunction',5,'p_conjfunction','sintactico.py',178),
  ('conjfunction -> LPAREN CONJ lista ID RPAREN','conjfunction',5,'p_conjfunction','sintactico.py',179),
  ('conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN','conjfunction',5,'p_conjfunction','sintactico.py',180),
  ('conjfunction -> LPAREN CONJ conjunto ID RPAREN','conjfunction',5,'p_conjfunction','sintactico.py',181),
  ('conjfunction -> LPAREN CONJ vector NUMBER RPAREN','conjfunction',5,'p_conjfunction','sintactico.py',182),
  ('conjfunction -> LPAREN CONJ vector ID RPAREN','conjfunction',5,'p_conjfunction','sintactico.py',183),
  ('strings -> valor_strings','strings',1,'p_strings','sintactico.py',187),
  ('strings -> valor_strings strings','strings',2,'p_strings','sintactico.py',188),
  ('valor_strings -> STRING','valor_strings',1,'p_valor_strings','sintactico.py',193),
  ('valor_strings -> ID','valor_strings',1,'p_valor_strings','sintactico.py',194),
  ('asignacion_funcion -> DEFN ID LCOR RCOR general','asignacion_funcion',5,'p_asignacion_funcion','sintactico.py',203),
  ('asignacion_funcion -> DEFN ID LCOR parametros RCOR general','asignacion_funcion',6,'p_asignacion_funcion','sintactico.py',204),
  ('parametros -> valores','parametros',1,'p_parametros','sintactico.py',212),
  ('valores -> ID','valores',1,'p_valores','sintactico.py',218),
  ('valores -> ID valores','valores',2,'p_valores','sintactico.py',219),
  ('function_call -> LPAREN ID RPAREN','function_call',3,'p_function_call','sintactico.py',224),
  ('function_call -> LPAREN ID argumentos RPAREN','function_call',4,'p_function_call','sintactico.py',225),
  ('argumentos -> valor_funcion','argumentos',1,'p_argumentos','sintactico.py',232),
  ('argumentos -> valor_funcion argumentos','argumentos',2,'p_argumentos','sintactico.py',233),
  ('valor_funcion -> valor','valor_funcion',1,'p_valor_funcion','sintactico.py',238),
  ('valor_funcion -> funcionstruct','valor_funcion',1,'p_valor_funcion','sintactico.py',239),
  ('valor_funcion -> function_call','valor_funcion',1,'p_valor_funcion','sintactico.py',240),
  ('valor_funcion -> struct','valor_funcion',1,'p_valor_funcion','sintactico.py',241),
  ('valor_funcion -> expression','valor_funcion',1,'p_valor_funcion','sintactico.py',242),
  ('valor_funcion -> comparacion','valor_funcion',1,'p_valor_funcion','sintactico.py',243),
]
