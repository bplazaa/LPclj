Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMA
    CONJ
    COUNT
    DDOT
    DEF
    DEFN
    DO
    FALSE
    FOR
    GET
    IF
    IGUAL
    LBRACE
    LCOR
    MAYORQUE
    MENORQUE
    NOT
    NTH
    NUMERAL
    OR
    POP
    PRINT
    PRINTF
    QUOTE
    RBRACE
    RCOR
    READ
    READLINE
    STR
    STRING
    THEN
    TRUE
    WHILE

Grammar

Rule 0     S' -> expression
Rule 1     expression -> PLUS factor factor
Rule 2     expression -> MINUS factor factor
Rule 3     expression -> term
Rule 4     operadoresMat -> PLUS
Rule 5     operadoresMat -> MINUS
Rule 6     operadoresMat -> TIMES
Rule 7     operadoresMat -> DIVIDE
Rule 8     term -> TIMES factor factor
Rule 9     term -> DIVIDE factor factor
Rule 10    valor -> NUMBER
Rule 11    valor -> ID
Rule 12    term -> factor
Rule 13    factor -> NUMBER
Rule 14    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 
COMA                 : 
CONJ                 : 
COUNT                : 
DDOT                 : 
DEF                  : 
DEFN                 : 
DIVIDE               : 7 9
DO                   : 
FALSE                : 
FOR                  : 
GET                  : 
ID                   : 11
IF                   : 
IGUAL                : 
LBRACE               : 
LCOR                 : 
LPAREN               : 14
MAYORQUE             : 
MENORQUE             : 
MINUS                : 2 5
NOT                  : 
NTH                  : 
NUMBER               : 10 13
NUMERAL              : 
OR                   : 
PLUS                 : 1 4
POP                  : 
PRINT                : 
PRINTF               : 
QUOTE                : 
RBRACE               : 
RCOR                 : 
READ                 : 
READLINE             : 
RPAREN               : 14
STR                  : 
STRING               : 
THEN                 : 
TIMES                : 6 8
TRUE                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

expression           : 14 0
factor               : 1 1 2 2 8 8 9 9 12
operadoresMat        : 
term                 : 3
valor                : 

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . PLUS factor factor
    (2) expression -> . MINUS factor factor
    (3) expression -> . term
    (8) term -> . TIMES factor factor
    (9) term -> . DIVIDE factor factor
    (12) term -> . factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    PLUS            shift and go to state 2
    MINUS           shift and go to state 4
    TIMES           shift and go to state 6
    DIVIDE          shift and go to state 7
    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    expression                     shift and go to state 1
    factor                         shift and go to state 3
    term                           shift and go to state 5

state 1

    (0) S' -> expression .



state 2

    (1) expression -> PLUS . factor factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    factor                         shift and go to state 10

state 3

    (12) term -> factor .

    $end            reduce using rule 12 (term -> factor .)
    RPAREN          reduce using rule 12 (term -> factor .)


state 4

    (2) expression -> MINUS . factor factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    factor                         shift and go to state 11

state 5

    (3) expression -> term .

    $end            reduce using rule 3 (expression -> term .)
    RPAREN          reduce using rule 3 (expression -> term .)


state 6

    (8) term -> TIMES . factor factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    factor                         shift and go to state 12

state 7

    (9) term -> DIVIDE . factor factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    factor                         shift and go to state 13

state 8

    (13) factor -> NUMBER .

    $end            reduce using rule 13 (factor -> NUMBER .)
    NUMBER          reduce using rule 13 (factor -> NUMBER .)
    LPAREN          reduce using rule 13 (factor -> NUMBER .)
    RPAREN          reduce using rule 13 (factor -> NUMBER .)


state 9

    (14) factor -> LPAREN . expression RPAREN
    (1) expression -> . PLUS factor factor
    (2) expression -> . MINUS factor factor
    (3) expression -> . term
    (8) term -> . TIMES factor factor
    (9) term -> . DIVIDE factor factor
    (12) term -> . factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    PLUS            shift and go to state 2
    MINUS           shift and go to state 4
    TIMES           shift and go to state 6
    DIVIDE          shift and go to state 7
    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    expression                     shift and go to state 14
    factor                         shift and go to state 3
    term                           shift and go to state 5

state 10

    (1) expression -> PLUS factor . factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    factor                         shift and go to state 15

state 11

    (2) expression -> MINUS factor . factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    factor                         shift and go to state 16

state 12

    (8) term -> TIMES factor . factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    factor                         shift and go to state 17

state 13

    (9) term -> DIVIDE factor . factor
    (13) factor -> . NUMBER
    (14) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    LPAREN          shift and go to state 9

    factor                         shift and go to state 18

state 14

    (14) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 19


state 15

    (1) expression -> PLUS factor factor .

    $end            reduce using rule 1 (expression -> PLUS factor factor .)
    RPAREN          reduce using rule 1 (expression -> PLUS factor factor .)


state 16

    (2) expression -> MINUS factor factor .

    $end            reduce using rule 2 (expression -> MINUS factor factor .)
    RPAREN          reduce using rule 2 (expression -> MINUS factor factor .)


state 17

    (8) term -> TIMES factor factor .

    $end            reduce using rule 8 (term -> TIMES factor factor .)
    RPAREN          reduce using rule 8 (term -> TIMES factor factor .)


state 18

    (9) term -> DIVIDE factor factor .

    $end            reduce using rule 9 (term -> DIVIDE factor factor .)
    RPAREN          reduce using rule 9 (term -> DIVIDE factor factor .)


state 19

    (14) factor -> LPAREN expression RPAREN .

    $end            reduce using rule 14 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 14 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 14 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 14 (factor -> LPAREN expression RPAREN .)

