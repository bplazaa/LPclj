Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    FOR
    THEN

Grammar

Rule 0     S' -> general
Rule 1     general -> LPAREN expression RPAREN
Rule 2     general -> LPAREN comparacion RPAREN
Rule 3     general -> LPAREN sentenciaif RPAREN
Rule 4     general -> LPAREN sentenciawhile RPAREN
Rule 5     general -> LPAREN asignacion RPAREN
Rule 6     general -> LPAREN imprimir RPAREN
Rule 7     general -> LPAREN asignacion_funcion RPAREN
Rule 8     general -> function_call
Rule 9     general -> funcionstruct
Rule 10    general -> sentenciado
Rule 11    general -> read
Rule 12    general -> general general
Rule 13    expression -> operadoresMat factor factor
Rule 14    comparacion -> operadoresComp factor factor
Rule 15    operadoresMat -> PLUS
Rule 16    operadoresMat -> MINUS
Rule 17    operadoresMat -> TIMES
Rule 18    operadoresMat -> DIVIDE
Rule 19    operadoresMat -> MOD
Rule 20    operadoresComp -> MAYORQUE
Rule 21    operadoresComp -> MENORQUE
Rule 22    operadoresComp -> IGUAL
Rule 23    operadoresComp -> OR
Rule 24    operadoresComp -> AND
Rule 25    operadoresComp -> NOT
Rule 26    operadoresPrint -> PRINT
Rule 27    operadoresPrint -> PRINTLN
Rule 28    read -> LPAREN READ RPAREN
Rule 29    factor -> NUMBER
Rule 30    factor -> ID
Rule 31    factor -> FLOAT
Rule 32    factor -> booleanos
Rule 33    factor -> LPAREN expression RPAREN
Rule 34    asignacion -> DEF ID factor
Rule 35    asignacion -> DEF ID STRING
Rule 36    asignacion -> DEF ID struct
Rule 37    asignacion -> DEF ID funcionstruct
Rule 38    asignacion -> DEF ID read
Rule 39    asignacion -> DEF ID function_call
Rule 40    booleanos -> TRUE
Rule 41    booleanos -> FALSE
Rule 42    imprimir -> operadoresPrint factor
Rule 43    imprimir -> operadoresPrint STRING
Rule 44    imprimir -> PRINTF valorl
Rule 45    sentenciado -> LPAREN DO general RPAREN
Rule 46    sentenciaif -> IF LPAREN comparacion RPAREN general
Rule 47    sentenciaif -> IF LPAREN comparacion RPAREN sentenciado sentenciado
Rule 48    sentenciawhile -> WHILE LPAREN comparacion RPAREN sentenciado
Rule 49    struct -> lista
Rule 50    struct -> vector
Rule 51    struct -> mapa
Rule 52    struct -> conjunto
Rule 53    lista -> QUOTE LPAREN valorl RPAREN
Rule 54    vector -> LCOR valorl RCOR
Rule 55    mapa -> LBRACE repetirclave RBRACE
Rule 56    conjunto -> NUMERAL LBRACE valorl RBRACE
Rule 57    clavevalor -> ID DDOT valor
Rule 58    repetirclave -> clavevalor
Rule 59    repetirclave -> clavevalor COMA repetirclave
Rule 60    valor -> NUMBER
Rule 61    valor -> ID
Rule 62    valor -> STRING
Rule 63    valor -> booleanos
Rule 64    valor -> FLOAT
Rule 65    valorl -> NUMBER
Rule 66    valorl -> ID
Rule 67    valorl -> STRING
Rule 68    valorl -> booleanos
Rule 69    valorl -> FLOAT
Rule 70    valorl -> valorl valorl
Rule 71    funcionstruct -> conjfunction
Rule 72    funcionstruct -> LPAREN STR STRING strings RPAREN
Rule 73    funcionstruct -> LPAREN STR ID strings RPAREN
Rule 74    funcionstruct -> LPAREN GET conjunto NUMBER RPAREN
Rule 75    funcionstruct -> LPAREN GET conjunto ID RPAREN
Rule 76    funcionstruct -> LPAREN NTH lista NUMBER RPAREN
Rule 77    funcionstruct -> LPAREN NTH lista ID RPAREN
Rule 78    funcionstruct -> LPAREN POP vector RPAREN
Rule 79    funcionstruct -> LPAREN COUNT STRING RPAREN
Rule 80    funcionstruct -> LPAREN COUNT ID RPAREN
Rule 81    conjfunction -> LPAREN CONJ lista NUMBER RPAREN
Rule 82    conjfunction -> LPAREN CONJ lista ID RPAREN
Rule 83    conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN
Rule 84    conjfunction -> LPAREN CONJ conjunto ID RPAREN
Rule 85    conjfunction -> LPAREN CONJ vector NUMBER RPAREN
Rule 86    conjfunction -> LPAREN CONJ vector ID RPAREN
Rule 87    strings -> valor_strings
Rule 88    strings -> valor_strings strings
Rule 89    valor_strings -> STRING
Rule 90    valor_strings -> ID
Rule 91    asignacion_funcion -> DEFN ID LCOR RCOR general
Rule 92    asignacion_funcion -> DEFN ID LCOR parametros RCOR general
Rule 93    parametros -> valores
Rule 94    valores -> ID
Rule 95    valores -> ID valores
Rule 96    function_call -> LPAREN ID RPAREN
Rule 97    function_call -> LPAREN ID argumentos RPAREN
Rule 98    argumentos -> valor_funcion
Rule 99    argumentos -> valor_funcion argumentos
Rule 100   valor_funcion -> valor
Rule 101   valor_funcion -> funcionstruct
Rule 102   valor_funcion -> function_call
Rule 103   valor_funcion -> struct
Rule 104   valor_funcion -> expression
Rule 105   valor_funcion -> comparacion

Terminals, with rules where they appear

AND                  : 24
COMA                 : 59
COMMENT              : 
CONJ                 : 81 82 83 84 85 86
COUNT                : 79 80
DDOT                 : 57
DEF                  : 34 35 36 37 38 39
DEFN                 : 91 92
DIVIDE               : 18
DO                   : 45
FALSE                : 41
FLOAT                : 31 64 69
FOR                  : 
GET                  : 74 75
ID                   : 30 34 35 36 37 38 39 57 61 66 73 75 77 80 82 84 86 90 91 92 94 95 96 97
IF                   : 46 47
IGUAL                : 22
LBRACE               : 55 56
LCOR                 : 54 91 92
LPAREN               : 1 2 3 4 5 6 7 28 33 45 46 47 48 53 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 96 97
MAYORQUE             : 20
MENORQUE             : 21
MINUS                : 16
MOD                  : 19
NOT                  : 25
NTH                  : 76 77
NUMBER               : 29 60 65 74 76 81 83 85
NUMERAL              : 56
OR                   : 23
PLUS                 : 15
POP                  : 78
PRINT                : 26
PRINTF               : 44
PRINTLN              : 27
QUOTE                : 53
RBRACE               : 55 56
RCOR                 : 54 91 92
READ                 : 28
RPAREN               : 1 2 3 4 5 6 7 28 33 45 46 47 48 53 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 96 97
STR                  : 72 73
STRING               : 35 43 62 67 72 79 89
THEN                 : 
TIMES                : 17
TRUE                 : 40
WHILE                : 48
error                : 

Nonterminals, with rules where they appear

argumentos           : 97 99
asignacion           : 5
asignacion_funcion   : 7
booleanos            : 32 63 68
clavevalor           : 58 59
comparacion          : 2 46 47 48 105
conjfunction         : 71
conjunto             : 52 74 75 83 84
expression           : 1 33 104
factor               : 13 13 14 14 34 42
funcionstruct        : 9 37 101
function_call        : 8 39 102
general              : 12 12 45 46 91 92 0
imprimir             : 6
lista                : 49 76 77 81 82
mapa                 : 51
operadoresComp       : 14
operadoresMat        : 13
operadoresPrint      : 42 43
parametros           : 92
read                 : 11 38
repetirclave         : 55 59
sentenciado          : 10 47 47 48
sentenciaif          : 3
sentenciawhile       : 4
strings              : 72 73 88
struct               : 36 103
valor                : 57 100
valor_funcion        : 98 99
valor_strings        : 87 88
valores              : 93 95
valorl               : 44 53 54 56 70 70
vector               : 50 78 85 86

Parsing method: LALR

state 0

    (0) S' -> . general
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    LPAREN          shift and go to state 2

    general                        shift and go to state 1
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 1

    (0) S' -> general .
    (12) general -> general . general
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    LPAREN          shift and go to state 2

    general                        shift and go to state 8
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 2

    (1) general -> LPAREN . expression RPAREN
    (2) general -> LPAREN . comparacion RPAREN
    (3) general -> LPAREN . sentenciaif RPAREN
    (4) general -> LPAREN . sentenciawhile RPAREN
    (5) general -> LPAREN . asignacion RPAREN
    (6) general -> LPAREN . imprimir RPAREN
    (7) general -> LPAREN . asignacion_funcion RPAREN
    (96) function_call -> LPAREN . ID RPAREN
    (97) function_call -> LPAREN . ID argumentos RPAREN
    (72) funcionstruct -> LPAREN . STR STRING strings RPAREN
    (73) funcionstruct -> LPAREN . STR ID strings RPAREN
    (74) funcionstruct -> LPAREN . GET conjunto NUMBER RPAREN
    (75) funcionstruct -> LPAREN . GET conjunto ID RPAREN
    (76) funcionstruct -> LPAREN . NTH lista NUMBER RPAREN
    (77) funcionstruct -> LPAREN . NTH lista ID RPAREN
    (78) funcionstruct -> LPAREN . POP vector RPAREN
    (79) funcionstruct -> LPAREN . COUNT STRING RPAREN
    (80) funcionstruct -> LPAREN . COUNT ID RPAREN
    (45) sentenciado -> LPAREN . DO general RPAREN
    (28) read -> LPAREN . READ RPAREN
    (81) conjfunction -> LPAREN . CONJ lista NUMBER RPAREN
    (82) conjfunction -> LPAREN . CONJ lista ID RPAREN
    (83) conjfunction -> LPAREN . CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> LPAREN . CONJ conjunto ID RPAREN
    (85) conjfunction -> LPAREN . CONJ vector NUMBER RPAREN
    (86) conjfunction -> LPAREN . CONJ vector ID RPAREN
    (13) expression -> . operadoresMat factor factor
    (14) comparacion -> . operadoresComp factor factor
    (46) sentenciaif -> . IF LPAREN comparacion RPAREN general
    (47) sentenciaif -> . IF LPAREN comparacion RPAREN sentenciado sentenciado
    (48) sentenciawhile -> . WHILE LPAREN comparacion RPAREN sentenciado
    (34) asignacion -> . DEF ID factor
    (35) asignacion -> . DEF ID STRING
    (36) asignacion -> . DEF ID struct
    (37) asignacion -> . DEF ID funcionstruct
    (38) asignacion -> . DEF ID read
    (39) asignacion -> . DEF ID function_call
    (42) imprimir -> . operadoresPrint factor
    (43) imprimir -> . operadoresPrint STRING
    (44) imprimir -> . PRINTF valorl
    (91) asignacion_funcion -> . DEFN ID LCOR RCOR general
    (92) asignacion_funcion -> . DEFN ID LCOR parametros RCOR general
    (15) operadoresMat -> . PLUS
    (16) operadoresMat -> . MINUS
    (17) operadoresMat -> . TIMES
    (18) operadoresMat -> . DIVIDE
    (19) operadoresMat -> . MOD
    (20) operadoresComp -> . MAYORQUE
    (21) operadoresComp -> . MENORQUE
    (22) operadoresComp -> . IGUAL
    (23) operadoresComp -> . OR
    (24) operadoresComp -> . AND
    (25) operadoresComp -> . NOT
    (26) operadoresPrint -> . PRINT
    (27) operadoresPrint -> . PRINTLN

    ID              shift and go to state 16
    STR             shift and go to state 17
    GET             shift and go to state 18
    NTH             shift and go to state 19
    POP             shift and go to state 20
    COUNT           shift and go to state 21
    DO              shift and go to state 22
    READ            shift and go to state 23
    CONJ            shift and go to state 24
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    DEF             shift and go to state 29
    PRINTF          shift and go to state 31
    DEFN            shift and go to state 32
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    MAYORQUE        shift and go to state 38
    MENORQUE        shift and go to state 39
    IGUAL           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    PRINTLN         shift and go to state 45

    expression                     shift and go to state 9
    comparacion                    shift and go to state 10
    sentenciaif                    shift and go to state 11
    sentenciawhile                 shift and go to state 12
    asignacion                     shift and go to state 13
    imprimir                       shift and go to state 14
    asignacion_funcion             shift and go to state 15
    operadoresMat                  shift and go to state 25
    operadoresComp                 shift and go to state 26
    operadoresPrint                shift and go to state 30

state 3

    (8) general -> function_call .

    LPAREN          reduce using rule 8 (general -> function_call .)
    $end            reduce using rule 8 (general -> function_call .)
    RPAREN          reduce using rule 8 (general -> function_call .)


state 4

    (9) general -> funcionstruct .

    LPAREN          reduce using rule 9 (general -> funcionstruct .)
    $end            reduce using rule 9 (general -> funcionstruct .)
    RPAREN          reduce using rule 9 (general -> funcionstruct .)


state 5

    (10) general -> sentenciado .

    LPAREN          reduce using rule 10 (general -> sentenciado .)
    $end            reduce using rule 10 (general -> sentenciado .)
    RPAREN          reduce using rule 10 (general -> sentenciado .)


state 6

    (11) general -> read .

    LPAREN          reduce using rule 11 (general -> read .)
    $end            reduce using rule 11 (general -> read .)
    RPAREN          reduce using rule 11 (general -> read .)


state 7

    (71) funcionstruct -> conjfunction .

    LPAREN          reduce using rule 71 (funcionstruct -> conjfunction .)
    $end            reduce using rule 71 (funcionstruct -> conjfunction .)
    RPAREN          reduce using rule 71 (funcionstruct -> conjfunction .)
    NUMBER          reduce using rule 71 (funcionstruct -> conjfunction .)
    ID              reduce using rule 71 (funcionstruct -> conjfunction .)
    STRING          reduce using rule 71 (funcionstruct -> conjfunction .)
    FLOAT           reduce using rule 71 (funcionstruct -> conjfunction .)
    TRUE            reduce using rule 71 (funcionstruct -> conjfunction .)
    FALSE           reduce using rule 71 (funcionstruct -> conjfunction .)
    QUOTE           reduce using rule 71 (funcionstruct -> conjfunction .)
    LCOR            reduce using rule 71 (funcionstruct -> conjfunction .)
    LBRACE          reduce using rule 71 (funcionstruct -> conjfunction .)
    NUMERAL         reduce using rule 71 (funcionstruct -> conjfunction .)
    PLUS            reduce using rule 71 (funcionstruct -> conjfunction .)
    MINUS           reduce using rule 71 (funcionstruct -> conjfunction .)
    TIMES           reduce using rule 71 (funcionstruct -> conjfunction .)
    DIVIDE          reduce using rule 71 (funcionstruct -> conjfunction .)
    MOD             reduce using rule 71 (funcionstruct -> conjfunction .)
    MAYORQUE        reduce using rule 71 (funcionstruct -> conjfunction .)
    MENORQUE        reduce using rule 71 (funcionstruct -> conjfunction .)
    IGUAL           reduce using rule 71 (funcionstruct -> conjfunction .)
    OR              reduce using rule 71 (funcionstruct -> conjfunction .)
    AND             reduce using rule 71 (funcionstruct -> conjfunction .)
    NOT             reduce using rule 71 (funcionstruct -> conjfunction .)


state 8

    (12) general -> general general .
    (12) general -> general . general
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 12 (general -> general general .)
    RPAREN          reduce using rule 12 (general -> general general .)
    LPAREN          shift and go to state 2

  ! LPAREN          [ reduce using rule 12 (general -> general general .) ]

    general                        shift and go to state 8
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 9

    (1) general -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 46


state 10

    (2) general -> LPAREN comparacion . RPAREN

    RPAREN          shift and go to state 47


state 11

    (3) general -> LPAREN sentenciaif . RPAREN

    RPAREN          shift and go to state 48


state 12

    (4) general -> LPAREN sentenciawhile . RPAREN

    RPAREN          shift and go to state 49


state 13

    (5) general -> LPAREN asignacion . RPAREN

    RPAREN          shift and go to state 50


state 14

    (6) general -> LPAREN imprimir . RPAREN

    RPAREN          shift and go to state 51


state 15

    (7) general -> LPAREN asignacion_funcion . RPAREN

    RPAREN          shift and go to state 52


state 16

    (96) function_call -> LPAREN ID . RPAREN
    (97) function_call -> LPAREN ID . argumentos RPAREN
    (98) argumentos -> . valor_funcion
    (99) argumentos -> . valor_funcion argumentos
    (100) valor_funcion -> . valor
    (101) valor_funcion -> . funcionstruct
    (102) valor_funcion -> . function_call
    (103) valor_funcion -> . struct
    (104) valor_funcion -> . expression
    (105) valor_funcion -> . comparacion
    (60) valor -> . NUMBER
    (61) valor -> . ID
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (49) struct -> . lista
    (50) struct -> . vector
    (51) struct -> . mapa
    (52) struct -> . conjunto
    (13) expression -> . operadoresMat factor factor
    (14) comparacion -> . operadoresComp factor factor
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN
    (53) lista -> . QUOTE LPAREN valorl RPAREN
    (54) vector -> . LCOR valorl RCOR
    (55) mapa -> . LBRACE repetirclave RBRACE
    (56) conjunto -> . NUMERAL LBRACE valorl RBRACE
    (15) operadoresMat -> . PLUS
    (16) operadoresMat -> . MINUS
    (17) operadoresMat -> . TIMES
    (18) operadoresMat -> . DIVIDE
    (19) operadoresMat -> . MOD
    (20) operadoresComp -> . MAYORQUE
    (21) operadoresComp -> . MENORQUE
    (22) operadoresComp -> . IGUAL
    (23) operadoresComp -> . OR
    (24) operadoresComp -> . AND
    (25) operadoresComp -> . NOT

    RPAREN          shift and go to state 55
    NUMBER          shift and go to state 64
    ID              shift and go to state 54
    STRING          shift and go to state 65
    FLOAT           shift and go to state 67
    LPAREN          shift and go to state 53
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    QUOTE           shift and go to state 74
    LCOR            shift and go to state 75
    LBRACE          shift and go to state 76
    NUMERAL         shift and go to state 77
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    MAYORQUE        shift and go to state 38
    MENORQUE        shift and go to state 39
    IGUAL           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43

    argumentos                     shift and go to state 56
    valor_funcion                  shift and go to state 57
    valor                          shift and go to state 58
    funcionstruct                  shift and go to state 59
    function_call                  shift and go to state 60
    struct                         shift and go to state 61
    expression                     shift and go to state 62
    comparacion                    shift and go to state 63
    booleanos                      shift and go to state 66
    conjfunction                   shift and go to state 7
    conjunto                       shift and go to state 68
    lista                          shift and go to state 69
    vector                         shift and go to state 70
    mapa                           shift and go to state 71
    operadoresMat                  shift and go to state 25
    operadoresComp                 shift and go to state 26

state 17

    (72) funcionstruct -> LPAREN STR . STRING strings RPAREN
    (73) funcionstruct -> LPAREN STR . ID strings RPAREN

    STRING          shift and go to state 78
    ID              shift and go to state 79


state 18

    (74) funcionstruct -> LPAREN GET . conjunto NUMBER RPAREN
    (75) funcionstruct -> LPAREN GET . conjunto ID RPAREN
    (56) conjunto -> . NUMERAL LBRACE valorl RBRACE

    NUMERAL         shift and go to state 77

    conjunto                       shift and go to state 80

state 19

    (76) funcionstruct -> LPAREN NTH . lista NUMBER RPAREN
    (77) funcionstruct -> LPAREN NTH . lista ID RPAREN
    (53) lista -> . QUOTE LPAREN valorl RPAREN

    QUOTE           shift and go to state 74

    lista                          shift and go to state 81

state 20

    (78) funcionstruct -> LPAREN POP . vector RPAREN
    (54) vector -> . LCOR valorl RCOR

    LCOR            shift and go to state 75

    vector                         shift and go to state 82

state 21

    (79) funcionstruct -> LPAREN COUNT . STRING RPAREN
    (80) funcionstruct -> LPAREN COUNT . ID RPAREN

    STRING          shift and go to state 83
    ID              shift and go to state 84


state 22

    (45) sentenciado -> LPAREN DO . general RPAREN
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    LPAREN          shift and go to state 2

    general                        shift and go to state 85
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 23

    (28) read -> LPAREN READ . RPAREN

    RPAREN          shift and go to state 86


state 24

    (81) conjfunction -> LPAREN CONJ . lista NUMBER RPAREN
    (82) conjfunction -> LPAREN CONJ . lista ID RPAREN
    (83) conjfunction -> LPAREN CONJ . conjunto NUMBER RPAREN
    (84) conjfunction -> LPAREN CONJ . conjunto ID RPAREN
    (85) conjfunction -> LPAREN CONJ . vector NUMBER RPAREN
    (86) conjfunction -> LPAREN CONJ . vector ID RPAREN
    (53) lista -> . QUOTE LPAREN valorl RPAREN
    (56) conjunto -> . NUMERAL LBRACE valorl RBRACE
    (54) vector -> . LCOR valorl RCOR

    QUOTE           shift and go to state 74
    NUMERAL         shift and go to state 77
    LCOR            shift and go to state 75

    lista                          shift and go to state 87
    conjunto                       shift and go to state 88
    vector                         shift and go to state 89

state 25

    (13) expression -> operadoresMat . factor factor
    (29) factor -> . NUMBER
    (30) factor -> . ID
    (31) factor -> . FLOAT
    (32) factor -> . booleanos
    (33) factor -> . LPAREN expression RPAREN
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    NUMBER          shift and go to state 91
    ID              shift and go to state 92
    FLOAT           shift and go to state 93
    LPAREN          shift and go to state 95
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    factor                         shift and go to state 90
    booleanos                      shift and go to state 94

state 26

    (14) comparacion -> operadoresComp . factor factor
    (29) factor -> . NUMBER
    (30) factor -> . ID
    (31) factor -> . FLOAT
    (32) factor -> . booleanos
    (33) factor -> . LPAREN expression RPAREN
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    NUMBER          shift and go to state 91
    ID              shift and go to state 92
    FLOAT           shift and go to state 93
    LPAREN          shift and go to state 95
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    factor                         shift and go to state 96
    booleanos                      shift and go to state 94

state 27

    (46) sentenciaif -> IF . LPAREN comparacion RPAREN general
    (47) sentenciaif -> IF . LPAREN comparacion RPAREN sentenciado sentenciado

    LPAREN          shift and go to state 97


state 28

    (48) sentenciawhile -> WHILE . LPAREN comparacion RPAREN sentenciado

    LPAREN          shift and go to state 98


state 29

    (34) asignacion -> DEF . ID factor
    (35) asignacion -> DEF . ID STRING
    (36) asignacion -> DEF . ID struct
    (37) asignacion -> DEF . ID funcionstruct
    (38) asignacion -> DEF . ID read
    (39) asignacion -> DEF . ID function_call

    ID              shift and go to state 99


state 30

    (42) imprimir -> operadoresPrint . factor
    (43) imprimir -> operadoresPrint . STRING
    (29) factor -> . NUMBER
    (30) factor -> . ID
    (31) factor -> . FLOAT
    (32) factor -> . booleanos
    (33) factor -> . LPAREN expression RPAREN
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    STRING          shift and go to state 101
    NUMBER          shift and go to state 91
    ID              shift and go to state 92
    FLOAT           shift and go to state 93
    LPAREN          shift and go to state 95
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    factor                         shift and go to state 100
    booleanos                      shift and go to state 94

state 31

    (44) imprimir -> PRINTF . valorl
    (65) valorl -> . NUMBER
    (66) valorl -> . ID
    (67) valorl -> . STRING
    (68) valorl -> . booleanos
    (69) valorl -> . FLOAT
    (70) valorl -> . valorl valorl
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    NUMBER          shift and go to state 103
    ID              shift and go to state 104
    STRING          shift and go to state 105
    FLOAT           shift and go to state 107
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    valorl                         shift and go to state 102
    booleanos                      shift and go to state 106

state 32

    (91) asignacion_funcion -> DEFN . ID LCOR RCOR general
    (92) asignacion_funcion -> DEFN . ID LCOR parametros RCOR general

    ID              shift and go to state 108


state 33

    (15) operadoresMat -> PLUS .

    NUMBER          reduce using rule 15 (operadoresMat -> PLUS .)
    ID              reduce using rule 15 (operadoresMat -> PLUS .)
    FLOAT           reduce using rule 15 (operadoresMat -> PLUS .)
    LPAREN          reduce using rule 15 (operadoresMat -> PLUS .)
    TRUE            reduce using rule 15 (operadoresMat -> PLUS .)
    FALSE           reduce using rule 15 (operadoresMat -> PLUS .)


state 34

    (16) operadoresMat -> MINUS .

    NUMBER          reduce using rule 16 (operadoresMat -> MINUS .)
    ID              reduce using rule 16 (operadoresMat -> MINUS .)
    FLOAT           reduce using rule 16 (operadoresMat -> MINUS .)
    LPAREN          reduce using rule 16 (operadoresMat -> MINUS .)
    TRUE            reduce using rule 16 (operadoresMat -> MINUS .)
    FALSE           reduce using rule 16 (operadoresMat -> MINUS .)


state 35

    (17) operadoresMat -> TIMES .

    NUMBER          reduce using rule 17 (operadoresMat -> TIMES .)
    ID              reduce using rule 17 (operadoresMat -> TIMES .)
    FLOAT           reduce using rule 17 (operadoresMat -> TIMES .)
    LPAREN          reduce using rule 17 (operadoresMat -> TIMES .)
    TRUE            reduce using rule 17 (operadoresMat -> TIMES .)
    FALSE           reduce using rule 17 (operadoresMat -> TIMES .)


state 36

    (18) operadoresMat -> DIVIDE .

    NUMBER          reduce using rule 18 (operadoresMat -> DIVIDE .)
    ID              reduce using rule 18 (operadoresMat -> DIVIDE .)
    FLOAT           reduce using rule 18 (operadoresMat -> DIVIDE .)
    LPAREN          reduce using rule 18 (operadoresMat -> DIVIDE .)
    TRUE            reduce using rule 18 (operadoresMat -> DIVIDE .)
    FALSE           reduce using rule 18 (operadoresMat -> DIVIDE .)


state 37

    (19) operadoresMat -> MOD .

    NUMBER          reduce using rule 19 (operadoresMat -> MOD .)
    ID              reduce using rule 19 (operadoresMat -> MOD .)
    FLOAT           reduce using rule 19 (operadoresMat -> MOD .)
    LPAREN          reduce using rule 19 (operadoresMat -> MOD .)
    TRUE            reduce using rule 19 (operadoresMat -> MOD .)
    FALSE           reduce using rule 19 (operadoresMat -> MOD .)


state 38

    (20) operadoresComp -> MAYORQUE .

    NUMBER          reduce using rule 20 (operadoresComp -> MAYORQUE .)
    ID              reduce using rule 20 (operadoresComp -> MAYORQUE .)
    FLOAT           reduce using rule 20 (operadoresComp -> MAYORQUE .)
    LPAREN          reduce using rule 20 (operadoresComp -> MAYORQUE .)
    TRUE            reduce using rule 20 (operadoresComp -> MAYORQUE .)
    FALSE           reduce using rule 20 (operadoresComp -> MAYORQUE .)


state 39

    (21) operadoresComp -> MENORQUE .

    NUMBER          reduce using rule 21 (operadoresComp -> MENORQUE .)
    ID              reduce using rule 21 (operadoresComp -> MENORQUE .)
    FLOAT           reduce using rule 21 (operadoresComp -> MENORQUE .)
    LPAREN          reduce using rule 21 (operadoresComp -> MENORQUE .)
    TRUE            reduce using rule 21 (operadoresComp -> MENORQUE .)
    FALSE           reduce using rule 21 (operadoresComp -> MENORQUE .)


state 40

    (22) operadoresComp -> IGUAL .

    NUMBER          reduce using rule 22 (operadoresComp -> IGUAL .)
    ID              reduce using rule 22 (operadoresComp -> IGUAL .)
    FLOAT           reduce using rule 22 (operadoresComp -> IGUAL .)
    LPAREN          reduce using rule 22 (operadoresComp -> IGUAL .)
    TRUE            reduce using rule 22 (operadoresComp -> IGUAL .)
    FALSE           reduce using rule 22 (operadoresComp -> IGUAL .)


state 41

    (23) operadoresComp -> OR .

    NUMBER          reduce using rule 23 (operadoresComp -> OR .)
    ID              reduce using rule 23 (operadoresComp -> OR .)
    FLOAT           reduce using rule 23 (operadoresComp -> OR .)
    LPAREN          reduce using rule 23 (operadoresComp -> OR .)
    TRUE            reduce using rule 23 (operadoresComp -> OR .)
    FALSE           reduce using rule 23 (operadoresComp -> OR .)


state 42

    (24) operadoresComp -> AND .

    NUMBER          reduce using rule 24 (operadoresComp -> AND .)
    ID              reduce using rule 24 (operadoresComp -> AND .)
    FLOAT           reduce using rule 24 (operadoresComp -> AND .)
    LPAREN          reduce using rule 24 (operadoresComp -> AND .)
    TRUE            reduce using rule 24 (operadoresComp -> AND .)
    FALSE           reduce using rule 24 (operadoresComp -> AND .)


state 43

    (25) operadoresComp -> NOT .

    NUMBER          reduce using rule 25 (operadoresComp -> NOT .)
    ID              reduce using rule 25 (operadoresComp -> NOT .)
    FLOAT           reduce using rule 25 (operadoresComp -> NOT .)
    LPAREN          reduce using rule 25 (operadoresComp -> NOT .)
    TRUE            reduce using rule 25 (operadoresComp -> NOT .)
    FALSE           reduce using rule 25 (operadoresComp -> NOT .)


state 44

    (26) operadoresPrint -> PRINT .

    STRING          reduce using rule 26 (operadoresPrint -> PRINT .)
    NUMBER          reduce using rule 26 (operadoresPrint -> PRINT .)
    ID              reduce using rule 26 (operadoresPrint -> PRINT .)
    FLOAT           reduce using rule 26 (operadoresPrint -> PRINT .)
    LPAREN          reduce using rule 26 (operadoresPrint -> PRINT .)
    TRUE            reduce using rule 26 (operadoresPrint -> PRINT .)
    FALSE           reduce using rule 26 (operadoresPrint -> PRINT .)


state 45

    (27) operadoresPrint -> PRINTLN .

    STRING          reduce using rule 27 (operadoresPrint -> PRINTLN .)
    NUMBER          reduce using rule 27 (operadoresPrint -> PRINTLN .)
    ID              reduce using rule 27 (operadoresPrint -> PRINTLN .)
    FLOAT           reduce using rule 27 (operadoresPrint -> PRINTLN .)
    LPAREN          reduce using rule 27 (operadoresPrint -> PRINTLN .)
    TRUE            reduce using rule 27 (operadoresPrint -> PRINTLN .)
    FALSE           reduce using rule 27 (operadoresPrint -> PRINTLN .)


state 46

    (1) general -> LPAREN expression RPAREN .

    LPAREN          reduce using rule 1 (general -> LPAREN expression RPAREN .)
    $end            reduce using rule 1 (general -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 1 (general -> LPAREN expression RPAREN .)


state 47

    (2) general -> LPAREN comparacion RPAREN .

    LPAREN          reduce using rule 2 (general -> LPAREN comparacion RPAREN .)
    $end            reduce using rule 2 (general -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 2 (general -> LPAREN comparacion RPAREN .)


state 48

    (3) general -> LPAREN sentenciaif RPAREN .

    LPAREN          reduce using rule 3 (general -> LPAREN sentenciaif RPAREN .)
    $end            reduce using rule 3 (general -> LPAREN sentenciaif RPAREN .)
    RPAREN          reduce using rule 3 (general -> LPAREN sentenciaif RPAREN .)


state 49

    (4) general -> LPAREN sentenciawhile RPAREN .

    LPAREN          reduce using rule 4 (general -> LPAREN sentenciawhile RPAREN .)
    $end            reduce using rule 4 (general -> LPAREN sentenciawhile RPAREN .)
    RPAREN          reduce using rule 4 (general -> LPAREN sentenciawhile RPAREN .)


state 50

    (5) general -> LPAREN asignacion RPAREN .

    LPAREN          reduce using rule 5 (general -> LPAREN asignacion RPAREN .)
    $end            reduce using rule 5 (general -> LPAREN asignacion RPAREN .)
    RPAREN          reduce using rule 5 (general -> LPAREN asignacion RPAREN .)


state 51

    (6) general -> LPAREN imprimir RPAREN .

    LPAREN          reduce using rule 6 (general -> LPAREN imprimir RPAREN .)
    $end            reduce using rule 6 (general -> LPAREN imprimir RPAREN .)
    RPAREN          reduce using rule 6 (general -> LPAREN imprimir RPAREN .)


state 52

    (7) general -> LPAREN asignacion_funcion RPAREN .

    LPAREN          reduce using rule 7 (general -> LPAREN asignacion_funcion RPAREN .)
    $end            reduce using rule 7 (general -> LPAREN asignacion_funcion RPAREN .)
    RPAREN          reduce using rule 7 (general -> LPAREN asignacion_funcion RPAREN .)


state 53

    (72) funcionstruct -> LPAREN . STR STRING strings RPAREN
    (73) funcionstruct -> LPAREN . STR ID strings RPAREN
    (74) funcionstruct -> LPAREN . GET conjunto NUMBER RPAREN
    (75) funcionstruct -> LPAREN . GET conjunto ID RPAREN
    (76) funcionstruct -> LPAREN . NTH lista NUMBER RPAREN
    (77) funcionstruct -> LPAREN . NTH lista ID RPAREN
    (78) funcionstruct -> LPAREN . POP vector RPAREN
    (79) funcionstruct -> LPAREN . COUNT STRING RPAREN
    (80) funcionstruct -> LPAREN . COUNT ID RPAREN
    (96) function_call -> LPAREN . ID RPAREN
    (97) function_call -> LPAREN . ID argumentos RPAREN
    (81) conjfunction -> LPAREN . CONJ lista NUMBER RPAREN
    (82) conjfunction -> LPAREN . CONJ lista ID RPAREN
    (83) conjfunction -> LPAREN . CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> LPAREN . CONJ conjunto ID RPAREN
    (85) conjfunction -> LPAREN . CONJ vector NUMBER RPAREN
    (86) conjfunction -> LPAREN . CONJ vector ID RPAREN

    STR             shift and go to state 17
    GET             shift and go to state 18
    NTH             shift and go to state 19
    POP             shift and go to state 20
    COUNT           shift and go to state 21
    ID              shift and go to state 16
    CONJ            shift and go to state 24


state 54

    (61) valor -> ID .

    NUMBER          reduce using rule 61 (valor -> ID .)
    ID              reduce using rule 61 (valor -> ID .)
    STRING          reduce using rule 61 (valor -> ID .)
    FLOAT           reduce using rule 61 (valor -> ID .)
    LPAREN          reduce using rule 61 (valor -> ID .)
    TRUE            reduce using rule 61 (valor -> ID .)
    FALSE           reduce using rule 61 (valor -> ID .)
    QUOTE           reduce using rule 61 (valor -> ID .)
    LCOR            reduce using rule 61 (valor -> ID .)
    LBRACE          reduce using rule 61 (valor -> ID .)
    NUMERAL         reduce using rule 61 (valor -> ID .)
    PLUS            reduce using rule 61 (valor -> ID .)
    MINUS           reduce using rule 61 (valor -> ID .)
    TIMES           reduce using rule 61 (valor -> ID .)
    DIVIDE          reduce using rule 61 (valor -> ID .)
    MOD             reduce using rule 61 (valor -> ID .)
    MAYORQUE        reduce using rule 61 (valor -> ID .)
    MENORQUE        reduce using rule 61 (valor -> ID .)
    IGUAL           reduce using rule 61 (valor -> ID .)
    OR              reduce using rule 61 (valor -> ID .)
    AND             reduce using rule 61 (valor -> ID .)
    NOT             reduce using rule 61 (valor -> ID .)
    RPAREN          reduce using rule 61 (valor -> ID .)
    COMA            reduce using rule 61 (valor -> ID .)
    RBRACE          reduce using rule 61 (valor -> ID .)


state 55

    (96) function_call -> LPAREN ID RPAREN .

    LPAREN          reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    $end            reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    RPAREN          reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    NUMBER          reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    ID              reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    STRING          reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    FLOAT           reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    TRUE            reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    FALSE           reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    QUOTE           reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    LCOR            reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    LBRACE          reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    NUMERAL         reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    PLUS            reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    MINUS           reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    TIMES           reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    MOD             reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    MAYORQUE        reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    MENORQUE        reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    IGUAL           reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    OR              reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    AND             reduce using rule 96 (function_call -> LPAREN ID RPAREN .)
    NOT             reduce using rule 96 (function_call -> LPAREN ID RPAREN .)


state 56

    (97) function_call -> LPAREN ID argumentos . RPAREN

    RPAREN          shift and go to state 109


state 57

    (98) argumentos -> valor_funcion .
    (99) argumentos -> valor_funcion . argumentos
    (98) argumentos -> . valor_funcion
    (99) argumentos -> . valor_funcion argumentos
    (100) valor_funcion -> . valor
    (101) valor_funcion -> . funcionstruct
    (102) valor_funcion -> . function_call
    (103) valor_funcion -> . struct
    (104) valor_funcion -> . expression
    (105) valor_funcion -> . comparacion
    (60) valor -> . NUMBER
    (61) valor -> . ID
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (49) struct -> . lista
    (50) struct -> . vector
    (51) struct -> . mapa
    (52) struct -> . conjunto
    (13) expression -> . operadoresMat factor factor
    (14) comparacion -> . operadoresComp factor factor
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN
    (53) lista -> . QUOTE LPAREN valorl RPAREN
    (54) vector -> . LCOR valorl RCOR
    (55) mapa -> . LBRACE repetirclave RBRACE
    (56) conjunto -> . NUMERAL LBRACE valorl RBRACE
    (15) operadoresMat -> . PLUS
    (16) operadoresMat -> . MINUS
    (17) operadoresMat -> . TIMES
    (18) operadoresMat -> . DIVIDE
    (19) operadoresMat -> . MOD
    (20) operadoresComp -> . MAYORQUE
    (21) operadoresComp -> . MENORQUE
    (22) operadoresComp -> . IGUAL
    (23) operadoresComp -> . OR
    (24) operadoresComp -> . AND
    (25) operadoresComp -> . NOT

    RPAREN          reduce using rule 98 (argumentos -> valor_funcion .)
    NUMBER          shift and go to state 64
    ID              shift and go to state 54
    STRING          shift and go to state 65
    FLOAT           shift and go to state 67
    LPAREN          shift and go to state 53
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    QUOTE           shift and go to state 74
    LCOR            shift and go to state 75
    LBRACE          shift and go to state 76
    NUMERAL         shift and go to state 77
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    MAYORQUE        shift and go to state 38
    MENORQUE        shift and go to state 39
    IGUAL           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43

    valor_funcion                  shift and go to state 57
    argumentos                     shift and go to state 110
    valor                          shift and go to state 58
    funcionstruct                  shift and go to state 59
    function_call                  shift and go to state 60
    struct                         shift and go to state 61
    expression                     shift and go to state 62
    comparacion                    shift and go to state 63
    booleanos                      shift and go to state 66
    conjfunction                   shift and go to state 7
    conjunto                       shift and go to state 68
    lista                          shift and go to state 69
    vector                         shift and go to state 70
    mapa                           shift and go to state 71
    operadoresMat                  shift and go to state 25
    operadoresComp                 shift and go to state 26

state 58

    (100) valor_funcion -> valor .

    NUMBER          reduce using rule 100 (valor_funcion -> valor .)
    ID              reduce using rule 100 (valor_funcion -> valor .)
    STRING          reduce using rule 100 (valor_funcion -> valor .)
    FLOAT           reduce using rule 100 (valor_funcion -> valor .)
    LPAREN          reduce using rule 100 (valor_funcion -> valor .)
    TRUE            reduce using rule 100 (valor_funcion -> valor .)
    FALSE           reduce using rule 100 (valor_funcion -> valor .)
    QUOTE           reduce using rule 100 (valor_funcion -> valor .)
    LCOR            reduce using rule 100 (valor_funcion -> valor .)
    LBRACE          reduce using rule 100 (valor_funcion -> valor .)
    NUMERAL         reduce using rule 100 (valor_funcion -> valor .)
    PLUS            reduce using rule 100 (valor_funcion -> valor .)
    MINUS           reduce using rule 100 (valor_funcion -> valor .)
    TIMES           reduce using rule 100 (valor_funcion -> valor .)
    DIVIDE          reduce using rule 100 (valor_funcion -> valor .)
    MOD             reduce using rule 100 (valor_funcion -> valor .)
    MAYORQUE        reduce using rule 100 (valor_funcion -> valor .)
    MENORQUE        reduce using rule 100 (valor_funcion -> valor .)
    IGUAL           reduce using rule 100 (valor_funcion -> valor .)
    OR              reduce using rule 100 (valor_funcion -> valor .)
    AND             reduce using rule 100 (valor_funcion -> valor .)
    NOT             reduce using rule 100 (valor_funcion -> valor .)
    RPAREN          reduce using rule 100 (valor_funcion -> valor .)


state 59

    (101) valor_funcion -> funcionstruct .

    NUMBER          reduce using rule 101 (valor_funcion -> funcionstruct .)
    ID              reduce using rule 101 (valor_funcion -> funcionstruct .)
    STRING          reduce using rule 101 (valor_funcion -> funcionstruct .)
    FLOAT           reduce using rule 101 (valor_funcion -> funcionstruct .)
    LPAREN          reduce using rule 101 (valor_funcion -> funcionstruct .)
    TRUE            reduce using rule 101 (valor_funcion -> funcionstruct .)
    FALSE           reduce using rule 101 (valor_funcion -> funcionstruct .)
    QUOTE           reduce using rule 101 (valor_funcion -> funcionstruct .)
    LCOR            reduce using rule 101 (valor_funcion -> funcionstruct .)
    LBRACE          reduce using rule 101 (valor_funcion -> funcionstruct .)
    NUMERAL         reduce using rule 101 (valor_funcion -> funcionstruct .)
    PLUS            reduce using rule 101 (valor_funcion -> funcionstruct .)
    MINUS           reduce using rule 101 (valor_funcion -> funcionstruct .)
    TIMES           reduce using rule 101 (valor_funcion -> funcionstruct .)
    DIVIDE          reduce using rule 101 (valor_funcion -> funcionstruct .)
    MOD             reduce using rule 101 (valor_funcion -> funcionstruct .)
    MAYORQUE        reduce using rule 101 (valor_funcion -> funcionstruct .)
    MENORQUE        reduce using rule 101 (valor_funcion -> funcionstruct .)
    IGUAL           reduce using rule 101 (valor_funcion -> funcionstruct .)
    OR              reduce using rule 101 (valor_funcion -> funcionstruct .)
    AND             reduce using rule 101 (valor_funcion -> funcionstruct .)
    NOT             reduce using rule 101 (valor_funcion -> funcionstruct .)
    RPAREN          reduce using rule 101 (valor_funcion -> funcionstruct .)


state 60

    (102) valor_funcion -> function_call .

    NUMBER          reduce using rule 102 (valor_funcion -> function_call .)
    ID              reduce using rule 102 (valor_funcion -> function_call .)
    STRING          reduce using rule 102 (valor_funcion -> function_call .)
    FLOAT           reduce using rule 102 (valor_funcion -> function_call .)
    LPAREN          reduce using rule 102 (valor_funcion -> function_call .)
    TRUE            reduce using rule 102 (valor_funcion -> function_call .)
    FALSE           reduce using rule 102 (valor_funcion -> function_call .)
    QUOTE           reduce using rule 102 (valor_funcion -> function_call .)
    LCOR            reduce using rule 102 (valor_funcion -> function_call .)
    LBRACE          reduce using rule 102 (valor_funcion -> function_call .)
    NUMERAL         reduce using rule 102 (valor_funcion -> function_call .)
    PLUS            reduce using rule 102 (valor_funcion -> function_call .)
    MINUS           reduce using rule 102 (valor_funcion -> function_call .)
    TIMES           reduce using rule 102 (valor_funcion -> function_call .)
    DIVIDE          reduce using rule 102 (valor_funcion -> function_call .)
    MOD             reduce using rule 102 (valor_funcion -> function_call .)
    MAYORQUE        reduce using rule 102 (valor_funcion -> function_call .)
    MENORQUE        reduce using rule 102 (valor_funcion -> function_call .)
    IGUAL           reduce using rule 102 (valor_funcion -> function_call .)
    OR              reduce using rule 102 (valor_funcion -> function_call .)
    AND             reduce using rule 102 (valor_funcion -> function_call .)
    NOT             reduce using rule 102 (valor_funcion -> function_call .)
    RPAREN          reduce using rule 102 (valor_funcion -> function_call .)


state 61

    (103) valor_funcion -> struct .

    NUMBER          reduce using rule 103 (valor_funcion -> struct .)
    ID              reduce using rule 103 (valor_funcion -> struct .)
    STRING          reduce using rule 103 (valor_funcion -> struct .)
    FLOAT           reduce using rule 103 (valor_funcion -> struct .)
    LPAREN          reduce using rule 103 (valor_funcion -> struct .)
    TRUE            reduce using rule 103 (valor_funcion -> struct .)
    FALSE           reduce using rule 103 (valor_funcion -> struct .)
    QUOTE           reduce using rule 103 (valor_funcion -> struct .)
    LCOR            reduce using rule 103 (valor_funcion -> struct .)
    LBRACE          reduce using rule 103 (valor_funcion -> struct .)
    NUMERAL         reduce using rule 103 (valor_funcion -> struct .)
    PLUS            reduce using rule 103 (valor_funcion -> struct .)
    MINUS           reduce using rule 103 (valor_funcion -> struct .)
    TIMES           reduce using rule 103 (valor_funcion -> struct .)
    DIVIDE          reduce using rule 103 (valor_funcion -> struct .)
    MOD             reduce using rule 103 (valor_funcion -> struct .)
    MAYORQUE        reduce using rule 103 (valor_funcion -> struct .)
    MENORQUE        reduce using rule 103 (valor_funcion -> struct .)
    IGUAL           reduce using rule 103 (valor_funcion -> struct .)
    OR              reduce using rule 103 (valor_funcion -> struct .)
    AND             reduce using rule 103 (valor_funcion -> struct .)
    NOT             reduce using rule 103 (valor_funcion -> struct .)
    RPAREN          reduce using rule 103 (valor_funcion -> struct .)


state 62

    (104) valor_funcion -> expression .

    NUMBER          reduce using rule 104 (valor_funcion -> expression .)
    ID              reduce using rule 104 (valor_funcion -> expression .)
    STRING          reduce using rule 104 (valor_funcion -> expression .)
    FLOAT           reduce using rule 104 (valor_funcion -> expression .)
    LPAREN          reduce using rule 104 (valor_funcion -> expression .)
    TRUE            reduce using rule 104 (valor_funcion -> expression .)
    FALSE           reduce using rule 104 (valor_funcion -> expression .)
    QUOTE           reduce using rule 104 (valor_funcion -> expression .)
    LCOR            reduce using rule 104 (valor_funcion -> expression .)
    LBRACE          reduce using rule 104 (valor_funcion -> expression .)
    NUMERAL         reduce using rule 104 (valor_funcion -> expression .)
    PLUS            reduce using rule 104 (valor_funcion -> expression .)
    MINUS           reduce using rule 104 (valor_funcion -> expression .)
    TIMES           reduce using rule 104 (valor_funcion -> expression .)
    DIVIDE          reduce using rule 104 (valor_funcion -> expression .)
    MOD             reduce using rule 104 (valor_funcion -> expression .)
    MAYORQUE        reduce using rule 104 (valor_funcion -> expression .)
    MENORQUE        reduce using rule 104 (valor_funcion -> expression .)
    IGUAL           reduce using rule 104 (valor_funcion -> expression .)
    OR              reduce using rule 104 (valor_funcion -> expression .)
    AND             reduce using rule 104 (valor_funcion -> expression .)
    NOT             reduce using rule 104 (valor_funcion -> expression .)
    RPAREN          reduce using rule 104 (valor_funcion -> expression .)


state 63

    (105) valor_funcion -> comparacion .

    NUMBER          reduce using rule 105 (valor_funcion -> comparacion .)
    ID              reduce using rule 105 (valor_funcion -> comparacion .)
    STRING          reduce using rule 105 (valor_funcion -> comparacion .)
    FLOAT           reduce using rule 105 (valor_funcion -> comparacion .)
    LPAREN          reduce using rule 105 (valor_funcion -> comparacion .)
    TRUE            reduce using rule 105 (valor_funcion -> comparacion .)
    FALSE           reduce using rule 105 (valor_funcion -> comparacion .)
    QUOTE           reduce using rule 105 (valor_funcion -> comparacion .)
    LCOR            reduce using rule 105 (valor_funcion -> comparacion .)
    LBRACE          reduce using rule 105 (valor_funcion -> comparacion .)
    NUMERAL         reduce using rule 105 (valor_funcion -> comparacion .)
    PLUS            reduce using rule 105 (valor_funcion -> comparacion .)
    MINUS           reduce using rule 105 (valor_funcion -> comparacion .)
    TIMES           reduce using rule 105 (valor_funcion -> comparacion .)
    DIVIDE          reduce using rule 105 (valor_funcion -> comparacion .)
    MOD             reduce using rule 105 (valor_funcion -> comparacion .)
    MAYORQUE        reduce using rule 105 (valor_funcion -> comparacion .)
    MENORQUE        reduce using rule 105 (valor_funcion -> comparacion .)
    IGUAL           reduce using rule 105 (valor_funcion -> comparacion .)
    OR              reduce using rule 105 (valor_funcion -> comparacion .)
    AND             reduce using rule 105 (valor_funcion -> comparacion .)
    NOT             reduce using rule 105 (valor_funcion -> comparacion .)
    RPAREN          reduce using rule 105 (valor_funcion -> comparacion .)


state 64

    (60) valor -> NUMBER .

    NUMBER          reduce using rule 60 (valor -> NUMBER .)
    ID              reduce using rule 60 (valor -> NUMBER .)
    STRING          reduce using rule 60 (valor -> NUMBER .)
    FLOAT           reduce using rule 60 (valor -> NUMBER .)
    LPAREN          reduce using rule 60 (valor -> NUMBER .)
    TRUE            reduce using rule 60 (valor -> NUMBER .)
    FALSE           reduce using rule 60 (valor -> NUMBER .)
    QUOTE           reduce using rule 60 (valor -> NUMBER .)
    LCOR            reduce using rule 60 (valor -> NUMBER .)
    LBRACE          reduce using rule 60 (valor -> NUMBER .)
    NUMERAL         reduce using rule 60 (valor -> NUMBER .)
    PLUS            reduce using rule 60 (valor -> NUMBER .)
    MINUS           reduce using rule 60 (valor -> NUMBER .)
    TIMES           reduce using rule 60 (valor -> NUMBER .)
    DIVIDE          reduce using rule 60 (valor -> NUMBER .)
    MOD             reduce using rule 60 (valor -> NUMBER .)
    MAYORQUE        reduce using rule 60 (valor -> NUMBER .)
    MENORQUE        reduce using rule 60 (valor -> NUMBER .)
    IGUAL           reduce using rule 60 (valor -> NUMBER .)
    OR              reduce using rule 60 (valor -> NUMBER .)
    AND             reduce using rule 60 (valor -> NUMBER .)
    NOT             reduce using rule 60 (valor -> NUMBER .)
    RPAREN          reduce using rule 60 (valor -> NUMBER .)
    COMA            reduce using rule 60 (valor -> NUMBER .)
    RBRACE          reduce using rule 60 (valor -> NUMBER .)


state 65

    (62) valor -> STRING .

    NUMBER          reduce using rule 62 (valor -> STRING .)
    ID              reduce using rule 62 (valor -> STRING .)
    STRING          reduce using rule 62 (valor -> STRING .)
    FLOAT           reduce using rule 62 (valor -> STRING .)
    LPAREN          reduce using rule 62 (valor -> STRING .)
    TRUE            reduce using rule 62 (valor -> STRING .)
    FALSE           reduce using rule 62 (valor -> STRING .)
    QUOTE           reduce using rule 62 (valor -> STRING .)
    LCOR            reduce using rule 62 (valor -> STRING .)
    LBRACE          reduce using rule 62 (valor -> STRING .)
    NUMERAL         reduce using rule 62 (valor -> STRING .)
    PLUS            reduce using rule 62 (valor -> STRING .)
    MINUS           reduce using rule 62 (valor -> STRING .)
    TIMES           reduce using rule 62 (valor -> STRING .)
    DIVIDE          reduce using rule 62 (valor -> STRING .)
    MOD             reduce using rule 62 (valor -> STRING .)
    MAYORQUE        reduce using rule 62 (valor -> STRING .)
    MENORQUE        reduce using rule 62 (valor -> STRING .)
    IGUAL           reduce using rule 62 (valor -> STRING .)
    OR              reduce using rule 62 (valor -> STRING .)
    AND             reduce using rule 62 (valor -> STRING .)
    NOT             reduce using rule 62 (valor -> STRING .)
    RPAREN          reduce using rule 62 (valor -> STRING .)
    COMA            reduce using rule 62 (valor -> STRING .)
    RBRACE          reduce using rule 62 (valor -> STRING .)


state 66

    (63) valor -> booleanos .

    NUMBER          reduce using rule 63 (valor -> booleanos .)
    ID              reduce using rule 63 (valor -> booleanos .)
    STRING          reduce using rule 63 (valor -> booleanos .)
    FLOAT           reduce using rule 63 (valor -> booleanos .)
    LPAREN          reduce using rule 63 (valor -> booleanos .)
    TRUE            reduce using rule 63 (valor -> booleanos .)
    FALSE           reduce using rule 63 (valor -> booleanos .)
    QUOTE           reduce using rule 63 (valor -> booleanos .)
    LCOR            reduce using rule 63 (valor -> booleanos .)
    LBRACE          reduce using rule 63 (valor -> booleanos .)
    NUMERAL         reduce using rule 63 (valor -> booleanos .)
    PLUS            reduce using rule 63 (valor -> booleanos .)
    MINUS           reduce using rule 63 (valor -> booleanos .)
    TIMES           reduce using rule 63 (valor -> booleanos .)
    DIVIDE          reduce using rule 63 (valor -> booleanos .)
    MOD             reduce using rule 63 (valor -> booleanos .)
    MAYORQUE        reduce using rule 63 (valor -> booleanos .)
    MENORQUE        reduce using rule 63 (valor -> booleanos .)
    IGUAL           reduce using rule 63 (valor -> booleanos .)
    OR              reduce using rule 63 (valor -> booleanos .)
    AND             reduce using rule 63 (valor -> booleanos .)
    NOT             reduce using rule 63 (valor -> booleanos .)
    RPAREN          reduce using rule 63 (valor -> booleanos .)
    COMA            reduce using rule 63 (valor -> booleanos .)
    RBRACE          reduce using rule 63 (valor -> booleanos .)


state 67

    (64) valor -> FLOAT .

    NUMBER          reduce using rule 64 (valor -> FLOAT .)
    ID              reduce using rule 64 (valor -> FLOAT .)
    STRING          reduce using rule 64 (valor -> FLOAT .)
    FLOAT           reduce using rule 64 (valor -> FLOAT .)
    LPAREN          reduce using rule 64 (valor -> FLOAT .)
    TRUE            reduce using rule 64 (valor -> FLOAT .)
    FALSE           reduce using rule 64 (valor -> FLOAT .)
    QUOTE           reduce using rule 64 (valor -> FLOAT .)
    LCOR            reduce using rule 64 (valor -> FLOAT .)
    LBRACE          reduce using rule 64 (valor -> FLOAT .)
    NUMERAL         reduce using rule 64 (valor -> FLOAT .)
    PLUS            reduce using rule 64 (valor -> FLOAT .)
    MINUS           reduce using rule 64 (valor -> FLOAT .)
    TIMES           reduce using rule 64 (valor -> FLOAT .)
    DIVIDE          reduce using rule 64 (valor -> FLOAT .)
    MOD             reduce using rule 64 (valor -> FLOAT .)
    MAYORQUE        reduce using rule 64 (valor -> FLOAT .)
    MENORQUE        reduce using rule 64 (valor -> FLOAT .)
    IGUAL           reduce using rule 64 (valor -> FLOAT .)
    OR              reduce using rule 64 (valor -> FLOAT .)
    AND             reduce using rule 64 (valor -> FLOAT .)
    NOT             reduce using rule 64 (valor -> FLOAT .)
    RPAREN          reduce using rule 64 (valor -> FLOAT .)
    COMA            reduce using rule 64 (valor -> FLOAT .)
    RBRACE          reduce using rule 64 (valor -> FLOAT .)


state 68

    (52) struct -> conjunto .

    NUMBER          reduce using rule 52 (struct -> conjunto .)
    ID              reduce using rule 52 (struct -> conjunto .)
    STRING          reduce using rule 52 (struct -> conjunto .)
    FLOAT           reduce using rule 52 (struct -> conjunto .)
    LPAREN          reduce using rule 52 (struct -> conjunto .)
    TRUE            reduce using rule 52 (struct -> conjunto .)
    FALSE           reduce using rule 52 (struct -> conjunto .)
    QUOTE           reduce using rule 52 (struct -> conjunto .)
    LCOR            reduce using rule 52 (struct -> conjunto .)
    LBRACE          reduce using rule 52 (struct -> conjunto .)
    NUMERAL         reduce using rule 52 (struct -> conjunto .)
    PLUS            reduce using rule 52 (struct -> conjunto .)
    MINUS           reduce using rule 52 (struct -> conjunto .)
    TIMES           reduce using rule 52 (struct -> conjunto .)
    DIVIDE          reduce using rule 52 (struct -> conjunto .)
    MOD             reduce using rule 52 (struct -> conjunto .)
    MAYORQUE        reduce using rule 52 (struct -> conjunto .)
    MENORQUE        reduce using rule 52 (struct -> conjunto .)
    IGUAL           reduce using rule 52 (struct -> conjunto .)
    OR              reduce using rule 52 (struct -> conjunto .)
    AND             reduce using rule 52 (struct -> conjunto .)
    NOT             reduce using rule 52 (struct -> conjunto .)
    RPAREN          reduce using rule 52 (struct -> conjunto .)


state 69

    (49) struct -> lista .

    NUMBER          reduce using rule 49 (struct -> lista .)
    ID              reduce using rule 49 (struct -> lista .)
    STRING          reduce using rule 49 (struct -> lista .)
    FLOAT           reduce using rule 49 (struct -> lista .)
    LPAREN          reduce using rule 49 (struct -> lista .)
    TRUE            reduce using rule 49 (struct -> lista .)
    FALSE           reduce using rule 49 (struct -> lista .)
    QUOTE           reduce using rule 49 (struct -> lista .)
    LCOR            reduce using rule 49 (struct -> lista .)
    LBRACE          reduce using rule 49 (struct -> lista .)
    NUMERAL         reduce using rule 49 (struct -> lista .)
    PLUS            reduce using rule 49 (struct -> lista .)
    MINUS           reduce using rule 49 (struct -> lista .)
    TIMES           reduce using rule 49 (struct -> lista .)
    DIVIDE          reduce using rule 49 (struct -> lista .)
    MOD             reduce using rule 49 (struct -> lista .)
    MAYORQUE        reduce using rule 49 (struct -> lista .)
    MENORQUE        reduce using rule 49 (struct -> lista .)
    IGUAL           reduce using rule 49 (struct -> lista .)
    OR              reduce using rule 49 (struct -> lista .)
    AND             reduce using rule 49 (struct -> lista .)
    NOT             reduce using rule 49 (struct -> lista .)
    RPAREN          reduce using rule 49 (struct -> lista .)


state 70

    (50) struct -> vector .

    NUMBER          reduce using rule 50 (struct -> vector .)
    ID              reduce using rule 50 (struct -> vector .)
    STRING          reduce using rule 50 (struct -> vector .)
    FLOAT           reduce using rule 50 (struct -> vector .)
    LPAREN          reduce using rule 50 (struct -> vector .)
    TRUE            reduce using rule 50 (struct -> vector .)
    FALSE           reduce using rule 50 (struct -> vector .)
    QUOTE           reduce using rule 50 (struct -> vector .)
    LCOR            reduce using rule 50 (struct -> vector .)
    LBRACE          reduce using rule 50 (struct -> vector .)
    NUMERAL         reduce using rule 50 (struct -> vector .)
    PLUS            reduce using rule 50 (struct -> vector .)
    MINUS           reduce using rule 50 (struct -> vector .)
    TIMES           reduce using rule 50 (struct -> vector .)
    DIVIDE          reduce using rule 50 (struct -> vector .)
    MOD             reduce using rule 50 (struct -> vector .)
    MAYORQUE        reduce using rule 50 (struct -> vector .)
    MENORQUE        reduce using rule 50 (struct -> vector .)
    IGUAL           reduce using rule 50 (struct -> vector .)
    OR              reduce using rule 50 (struct -> vector .)
    AND             reduce using rule 50 (struct -> vector .)
    NOT             reduce using rule 50 (struct -> vector .)
    RPAREN          reduce using rule 50 (struct -> vector .)


state 71

    (51) struct -> mapa .

    NUMBER          reduce using rule 51 (struct -> mapa .)
    ID              reduce using rule 51 (struct -> mapa .)
    STRING          reduce using rule 51 (struct -> mapa .)
    FLOAT           reduce using rule 51 (struct -> mapa .)
    LPAREN          reduce using rule 51 (struct -> mapa .)
    TRUE            reduce using rule 51 (struct -> mapa .)
    FALSE           reduce using rule 51 (struct -> mapa .)
    QUOTE           reduce using rule 51 (struct -> mapa .)
    LCOR            reduce using rule 51 (struct -> mapa .)
    LBRACE          reduce using rule 51 (struct -> mapa .)
    NUMERAL         reduce using rule 51 (struct -> mapa .)
    PLUS            reduce using rule 51 (struct -> mapa .)
    MINUS           reduce using rule 51 (struct -> mapa .)
    TIMES           reduce using rule 51 (struct -> mapa .)
    DIVIDE          reduce using rule 51 (struct -> mapa .)
    MOD             reduce using rule 51 (struct -> mapa .)
    MAYORQUE        reduce using rule 51 (struct -> mapa .)
    MENORQUE        reduce using rule 51 (struct -> mapa .)
    IGUAL           reduce using rule 51 (struct -> mapa .)
    OR              reduce using rule 51 (struct -> mapa .)
    AND             reduce using rule 51 (struct -> mapa .)
    NOT             reduce using rule 51 (struct -> mapa .)
    RPAREN          reduce using rule 51 (struct -> mapa .)


state 72

    (40) booleanos -> TRUE .

    NUMBER          reduce using rule 40 (booleanos -> TRUE .)
    ID              reduce using rule 40 (booleanos -> TRUE .)
    STRING          reduce using rule 40 (booleanos -> TRUE .)
    FLOAT           reduce using rule 40 (booleanos -> TRUE .)
    LPAREN          reduce using rule 40 (booleanos -> TRUE .)
    TRUE            reduce using rule 40 (booleanos -> TRUE .)
    FALSE           reduce using rule 40 (booleanos -> TRUE .)
    QUOTE           reduce using rule 40 (booleanos -> TRUE .)
    LCOR            reduce using rule 40 (booleanos -> TRUE .)
    LBRACE          reduce using rule 40 (booleanos -> TRUE .)
    NUMERAL         reduce using rule 40 (booleanos -> TRUE .)
    PLUS            reduce using rule 40 (booleanos -> TRUE .)
    MINUS           reduce using rule 40 (booleanos -> TRUE .)
    TIMES           reduce using rule 40 (booleanos -> TRUE .)
    DIVIDE          reduce using rule 40 (booleanos -> TRUE .)
    MOD             reduce using rule 40 (booleanos -> TRUE .)
    MAYORQUE        reduce using rule 40 (booleanos -> TRUE .)
    MENORQUE        reduce using rule 40 (booleanos -> TRUE .)
    IGUAL           reduce using rule 40 (booleanos -> TRUE .)
    OR              reduce using rule 40 (booleanos -> TRUE .)
    AND             reduce using rule 40 (booleanos -> TRUE .)
    NOT             reduce using rule 40 (booleanos -> TRUE .)
    RPAREN          reduce using rule 40 (booleanos -> TRUE .)
    RCOR            reduce using rule 40 (booleanos -> TRUE .)
    RBRACE          reduce using rule 40 (booleanos -> TRUE .)
    COMA            reduce using rule 40 (booleanos -> TRUE .)


state 73

    (41) booleanos -> FALSE .

    NUMBER          reduce using rule 41 (booleanos -> FALSE .)
    ID              reduce using rule 41 (booleanos -> FALSE .)
    STRING          reduce using rule 41 (booleanos -> FALSE .)
    FLOAT           reduce using rule 41 (booleanos -> FALSE .)
    LPAREN          reduce using rule 41 (booleanos -> FALSE .)
    TRUE            reduce using rule 41 (booleanos -> FALSE .)
    FALSE           reduce using rule 41 (booleanos -> FALSE .)
    QUOTE           reduce using rule 41 (booleanos -> FALSE .)
    LCOR            reduce using rule 41 (booleanos -> FALSE .)
    LBRACE          reduce using rule 41 (booleanos -> FALSE .)
    NUMERAL         reduce using rule 41 (booleanos -> FALSE .)
    PLUS            reduce using rule 41 (booleanos -> FALSE .)
    MINUS           reduce using rule 41 (booleanos -> FALSE .)
    TIMES           reduce using rule 41 (booleanos -> FALSE .)
    DIVIDE          reduce using rule 41 (booleanos -> FALSE .)
    MOD             reduce using rule 41 (booleanos -> FALSE .)
    MAYORQUE        reduce using rule 41 (booleanos -> FALSE .)
    MENORQUE        reduce using rule 41 (booleanos -> FALSE .)
    IGUAL           reduce using rule 41 (booleanos -> FALSE .)
    OR              reduce using rule 41 (booleanos -> FALSE .)
    AND             reduce using rule 41 (booleanos -> FALSE .)
    NOT             reduce using rule 41 (booleanos -> FALSE .)
    RPAREN          reduce using rule 41 (booleanos -> FALSE .)
    RCOR            reduce using rule 41 (booleanos -> FALSE .)
    RBRACE          reduce using rule 41 (booleanos -> FALSE .)
    COMA            reduce using rule 41 (booleanos -> FALSE .)


state 74

    (53) lista -> QUOTE . LPAREN valorl RPAREN

    LPAREN          shift and go to state 111


state 75

    (54) vector -> LCOR . valorl RCOR
    (65) valorl -> . NUMBER
    (66) valorl -> . ID
    (67) valorl -> . STRING
    (68) valorl -> . booleanos
    (69) valorl -> . FLOAT
    (70) valorl -> . valorl valorl
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    NUMBER          shift and go to state 103
    ID              shift and go to state 104
    STRING          shift and go to state 105
    FLOAT           shift and go to state 107
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    valorl                         shift and go to state 112
    booleanos                      shift and go to state 106

state 76

    (55) mapa -> LBRACE . repetirclave RBRACE
    (58) repetirclave -> . clavevalor
    (59) repetirclave -> . clavevalor COMA repetirclave
    (57) clavevalor -> . ID DDOT valor

    ID              shift and go to state 115

    repetirclave                   shift and go to state 113
    clavevalor                     shift and go to state 114

state 77

    (56) conjunto -> NUMERAL . LBRACE valorl RBRACE

    LBRACE          shift and go to state 116


state 78

    (72) funcionstruct -> LPAREN STR STRING . strings RPAREN
    (87) strings -> . valor_strings
    (88) strings -> . valor_strings strings
    (89) valor_strings -> . STRING
    (90) valor_strings -> . ID

    STRING          shift and go to state 117
    ID              shift and go to state 120

    strings                        shift and go to state 118
    valor_strings                  shift and go to state 119

state 79

    (73) funcionstruct -> LPAREN STR ID . strings RPAREN
    (87) strings -> . valor_strings
    (88) strings -> . valor_strings strings
    (89) valor_strings -> . STRING
    (90) valor_strings -> . ID

    STRING          shift and go to state 117
    ID              shift and go to state 120

    strings                        shift and go to state 121
    valor_strings                  shift and go to state 119

state 80

    (74) funcionstruct -> LPAREN GET conjunto . NUMBER RPAREN
    (75) funcionstruct -> LPAREN GET conjunto . ID RPAREN

    NUMBER          shift and go to state 122
    ID              shift and go to state 123


state 81

    (76) funcionstruct -> LPAREN NTH lista . NUMBER RPAREN
    (77) funcionstruct -> LPAREN NTH lista . ID RPAREN

    NUMBER          shift and go to state 124
    ID              shift and go to state 125


state 82

    (78) funcionstruct -> LPAREN POP vector . RPAREN

    RPAREN          shift and go to state 126


state 83

    (79) funcionstruct -> LPAREN COUNT STRING . RPAREN

    RPAREN          shift and go to state 127


state 84

    (80) funcionstruct -> LPAREN COUNT ID . RPAREN

    RPAREN          shift and go to state 128


state 85

    (45) sentenciado -> LPAREN DO general . RPAREN
    (12) general -> general . general
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    RPAREN          shift and go to state 129
    LPAREN          shift and go to state 2

    general                        shift and go to state 8
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 86

    (28) read -> LPAREN READ RPAREN .

    LPAREN          reduce using rule 28 (read -> LPAREN READ RPAREN .)
    $end            reduce using rule 28 (read -> LPAREN READ RPAREN .)
    RPAREN          reduce using rule 28 (read -> LPAREN READ RPAREN .)


state 87

    (81) conjfunction -> LPAREN CONJ lista . NUMBER RPAREN
    (82) conjfunction -> LPAREN CONJ lista . ID RPAREN

    NUMBER          shift and go to state 130
    ID              shift and go to state 131


state 88

    (83) conjfunction -> LPAREN CONJ conjunto . NUMBER RPAREN
    (84) conjfunction -> LPAREN CONJ conjunto . ID RPAREN

    NUMBER          shift and go to state 132
    ID              shift and go to state 133


state 89

    (85) conjfunction -> LPAREN CONJ vector . NUMBER RPAREN
    (86) conjfunction -> LPAREN CONJ vector . ID RPAREN

    NUMBER          shift and go to state 134
    ID              shift and go to state 135


state 90

    (13) expression -> operadoresMat factor . factor
    (29) factor -> . NUMBER
    (30) factor -> . ID
    (31) factor -> . FLOAT
    (32) factor -> . booleanos
    (33) factor -> . LPAREN expression RPAREN
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    NUMBER          shift and go to state 91
    ID              shift and go to state 92
    FLOAT           shift and go to state 93
    LPAREN          shift and go to state 95
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    factor                         shift and go to state 136
    booleanos                      shift and go to state 94

state 91

    (29) factor -> NUMBER .

    NUMBER          reduce using rule 29 (factor -> NUMBER .)
    ID              reduce using rule 29 (factor -> NUMBER .)
    FLOAT           reduce using rule 29 (factor -> NUMBER .)
    LPAREN          reduce using rule 29 (factor -> NUMBER .)
    TRUE            reduce using rule 29 (factor -> NUMBER .)
    FALSE           reduce using rule 29 (factor -> NUMBER .)
    RPAREN          reduce using rule 29 (factor -> NUMBER .)
    STRING          reduce using rule 29 (factor -> NUMBER .)
    QUOTE           reduce using rule 29 (factor -> NUMBER .)
    LCOR            reduce using rule 29 (factor -> NUMBER .)
    LBRACE          reduce using rule 29 (factor -> NUMBER .)
    NUMERAL         reduce using rule 29 (factor -> NUMBER .)
    PLUS            reduce using rule 29 (factor -> NUMBER .)
    MINUS           reduce using rule 29 (factor -> NUMBER .)
    TIMES           reduce using rule 29 (factor -> NUMBER .)
    DIVIDE          reduce using rule 29 (factor -> NUMBER .)
    MOD             reduce using rule 29 (factor -> NUMBER .)
    MAYORQUE        reduce using rule 29 (factor -> NUMBER .)
    MENORQUE        reduce using rule 29 (factor -> NUMBER .)
    IGUAL           reduce using rule 29 (factor -> NUMBER .)
    OR              reduce using rule 29 (factor -> NUMBER .)
    AND             reduce using rule 29 (factor -> NUMBER .)
    NOT             reduce using rule 29 (factor -> NUMBER .)


state 92

    (30) factor -> ID .

    NUMBER          reduce using rule 30 (factor -> ID .)
    ID              reduce using rule 30 (factor -> ID .)
    FLOAT           reduce using rule 30 (factor -> ID .)
    LPAREN          reduce using rule 30 (factor -> ID .)
    TRUE            reduce using rule 30 (factor -> ID .)
    FALSE           reduce using rule 30 (factor -> ID .)
    RPAREN          reduce using rule 30 (factor -> ID .)
    STRING          reduce using rule 30 (factor -> ID .)
    QUOTE           reduce using rule 30 (factor -> ID .)
    LCOR            reduce using rule 30 (factor -> ID .)
    LBRACE          reduce using rule 30 (factor -> ID .)
    NUMERAL         reduce using rule 30 (factor -> ID .)
    PLUS            reduce using rule 30 (factor -> ID .)
    MINUS           reduce using rule 30 (factor -> ID .)
    TIMES           reduce using rule 30 (factor -> ID .)
    DIVIDE          reduce using rule 30 (factor -> ID .)
    MOD             reduce using rule 30 (factor -> ID .)
    MAYORQUE        reduce using rule 30 (factor -> ID .)
    MENORQUE        reduce using rule 30 (factor -> ID .)
    IGUAL           reduce using rule 30 (factor -> ID .)
    OR              reduce using rule 30 (factor -> ID .)
    AND             reduce using rule 30 (factor -> ID .)
    NOT             reduce using rule 30 (factor -> ID .)


state 93

    (31) factor -> FLOAT .

    NUMBER          reduce using rule 31 (factor -> FLOAT .)
    ID              reduce using rule 31 (factor -> FLOAT .)
    FLOAT           reduce using rule 31 (factor -> FLOAT .)
    LPAREN          reduce using rule 31 (factor -> FLOAT .)
    TRUE            reduce using rule 31 (factor -> FLOAT .)
    FALSE           reduce using rule 31 (factor -> FLOAT .)
    RPAREN          reduce using rule 31 (factor -> FLOAT .)
    STRING          reduce using rule 31 (factor -> FLOAT .)
    QUOTE           reduce using rule 31 (factor -> FLOAT .)
    LCOR            reduce using rule 31 (factor -> FLOAT .)
    LBRACE          reduce using rule 31 (factor -> FLOAT .)
    NUMERAL         reduce using rule 31 (factor -> FLOAT .)
    PLUS            reduce using rule 31 (factor -> FLOAT .)
    MINUS           reduce using rule 31 (factor -> FLOAT .)
    TIMES           reduce using rule 31 (factor -> FLOAT .)
    DIVIDE          reduce using rule 31 (factor -> FLOAT .)
    MOD             reduce using rule 31 (factor -> FLOAT .)
    MAYORQUE        reduce using rule 31 (factor -> FLOAT .)
    MENORQUE        reduce using rule 31 (factor -> FLOAT .)
    IGUAL           reduce using rule 31 (factor -> FLOAT .)
    OR              reduce using rule 31 (factor -> FLOAT .)
    AND             reduce using rule 31 (factor -> FLOAT .)
    NOT             reduce using rule 31 (factor -> FLOAT .)


state 94

    (32) factor -> booleanos .

    NUMBER          reduce using rule 32 (factor -> booleanos .)
    ID              reduce using rule 32 (factor -> booleanos .)
    FLOAT           reduce using rule 32 (factor -> booleanos .)
    LPAREN          reduce using rule 32 (factor -> booleanos .)
    TRUE            reduce using rule 32 (factor -> booleanos .)
    FALSE           reduce using rule 32 (factor -> booleanos .)
    RPAREN          reduce using rule 32 (factor -> booleanos .)
    STRING          reduce using rule 32 (factor -> booleanos .)
    QUOTE           reduce using rule 32 (factor -> booleanos .)
    LCOR            reduce using rule 32 (factor -> booleanos .)
    LBRACE          reduce using rule 32 (factor -> booleanos .)
    NUMERAL         reduce using rule 32 (factor -> booleanos .)
    PLUS            reduce using rule 32 (factor -> booleanos .)
    MINUS           reduce using rule 32 (factor -> booleanos .)
    TIMES           reduce using rule 32 (factor -> booleanos .)
    DIVIDE          reduce using rule 32 (factor -> booleanos .)
    MOD             reduce using rule 32 (factor -> booleanos .)
    MAYORQUE        reduce using rule 32 (factor -> booleanos .)
    MENORQUE        reduce using rule 32 (factor -> booleanos .)
    IGUAL           reduce using rule 32 (factor -> booleanos .)
    OR              reduce using rule 32 (factor -> booleanos .)
    AND             reduce using rule 32 (factor -> booleanos .)
    NOT             reduce using rule 32 (factor -> booleanos .)


state 95

    (33) factor -> LPAREN . expression RPAREN
    (13) expression -> . operadoresMat factor factor
    (15) operadoresMat -> . PLUS
    (16) operadoresMat -> . MINUS
    (17) operadoresMat -> . TIMES
    (18) operadoresMat -> . DIVIDE
    (19) operadoresMat -> . MOD

    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37

    expression                     shift and go to state 137
    operadoresMat                  shift and go to state 25

state 96

    (14) comparacion -> operadoresComp factor . factor
    (29) factor -> . NUMBER
    (30) factor -> . ID
    (31) factor -> . FLOAT
    (32) factor -> . booleanos
    (33) factor -> . LPAREN expression RPAREN
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    NUMBER          shift and go to state 91
    ID              shift and go to state 92
    FLOAT           shift and go to state 93
    LPAREN          shift and go to state 95
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    factor                         shift and go to state 138
    booleanos                      shift and go to state 94

state 97

    (46) sentenciaif -> IF LPAREN . comparacion RPAREN general
    (47) sentenciaif -> IF LPAREN . comparacion RPAREN sentenciado sentenciado
    (14) comparacion -> . operadoresComp factor factor
    (20) operadoresComp -> . MAYORQUE
    (21) operadoresComp -> . MENORQUE
    (22) operadoresComp -> . IGUAL
    (23) operadoresComp -> . OR
    (24) operadoresComp -> . AND
    (25) operadoresComp -> . NOT

    MAYORQUE        shift and go to state 38
    MENORQUE        shift and go to state 39
    IGUAL           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43

    comparacion                    shift and go to state 139
    operadoresComp                 shift and go to state 26

state 98

    (48) sentenciawhile -> WHILE LPAREN . comparacion RPAREN sentenciado
    (14) comparacion -> . operadoresComp factor factor
    (20) operadoresComp -> . MAYORQUE
    (21) operadoresComp -> . MENORQUE
    (22) operadoresComp -> . IGUAL
    (23) operadoresComp -> . OR
    (24) operadoresComp -> . AND
    (25) operadoresComp -> . NOT

    MAYORQUE        shift and go to state 38
    MENORQUE        shift and go to state 39
    IGUAL           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43

    comparacion                    shift and go to state 140
    operadoresComp                 shift and go to state 26

state 99

    (34) asignacion -> DEF ID . factor
    (35) asignacion -> DEF ID . STRING
    (36) asignacion -> DEF ID . struct
    (37) asignacion -> DEF ID . funcionstruct
    (38) asignacion -> DEF ID . read
    (39) asignacion -> DEF ID . function_call
    (29) factor -> . NUMBER
    (30) factor -> . ID
    (31) factor -> . FLOAT
    (32) factor -> . booleanos
    (33) factor -> . LPAREN expression RPAREN
    (49) struct -> . lista
    (50) struct -> . vector
    (51) struct -> . mapa
    (52) struct -> . conjunto
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (28) read -> . LPAREN READ RPAREN
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE
    (53) lista -> . QUOTE LPAREN valorl RPAREN
    (54) vector -> . LCOR valorl RCOR
    (55) mapa -> . LBRACE repetirclave RBRACE
    (56) conjunto -> . NUMERAL LBRACE valorl RBRACE
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    STRING          shift and go to state 142
    NUMBER          shift and go to state 91
    ID              shift and go to state 92
    FLOAT           shift and go to state 93
    LPAREN          shift and go to state 147
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    QUOTE           shift and go to state 74
    LCOR            shift and go to state 75
    LBRACE          shift and go to state 76
    NUMERAL         shift and go to state 77

    factor                         shift and go to state 141
    struct                         shift and go to state 143
    funcionstruct                  shift and go to state 144
    read                           shift and go to state 145
    function_call                  shift and go to state 146
    booleanos                      shift and go to state 94
    lista                          shift and go to state 69
    vector                         shift and go to state 70
    mapa                           shift and go to state 71
    conjunto                       shift and go to state 68
    conjfunction                   shift and go to state 7

state 100

    (42) imprimir -> operadoresPrint factor .

    RPAREN          reduce using rule 42 (imprimir -> operadoresPrint factor .)


state 101

    (43) imprimir -> operadoresPrint STRING .

    RPAREN          reduce using rule 43 (imprimir -> operadoresPrint STRING .)


state 102

    (44) imprimir -> PRINTF valorl .
    (70) valorl -> valorl . valorl
    (65) valorl -> . NUMBER
    (66) valorl -> . ID
    (67) valorl -> . STRING
    (68) valorl -> . booleanos
    (69) valorl -> . FLOAT
    (70) valorl -> . valorl valorl
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    RPAREN          reduce using rule 44 (imprimir -> PRINTF valorl .)
    NUMBER          shift and go to state 103
    ID              shift and go to state 104
    STRING          shift and go to state 105
    FLOAT           shift and go to state 107
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    valorl                         shift and go to state 148
    booleanos                      shift and go to state 106

state 103

    (65) valorl -> NUMBER .

    NUMBER          reduce using rule 65 (valorl -> NUMBER .)
    ID              reduce using rule 65 (valorl -> NUMBER .)
    STRING          reduce using rule 65 (valorl -> NUMBER .)
    FLOAT           reduce using rule 65 (valorl -> NUMBER .)
    TRUE            reduce using rule 65 (valorl -> NUMBER .)
    FALSE           reduce using rule 65 (valorl -> NUMBER .)
    RPAREN          reduce using rule 65 (valorl -> NUMBER .)
    RCOR            reduce using rule 65 (valorl -> NUMBER .)
    RBRACE          reduce using rule 65 (valorl -> NUMBER .)


state 104

    (66) valorl -> ID .

    NUMBER          reduce using rule 66 (valorl -> ID .)
    ID              reduce using rule 66 (valorl -> ID .)
    STRING          reduce using rule 66 (valorl -> ID .)
    FLOAT           reduce using rule 66 (valorl -> ID .)
    TRUE            reduce using rule 66 (valorl -> ID .)
    FALSE           reduce using rule 66 (valorl -> ID .)
    RPAREN          reduce using rule 66 (valorl -> ID .)
    RCOR            reduce using rule 66 (valorl -> ID .)
    RBRACE          reduce using rule 66 (valorl -> ID .)


state 105

    (67) valorl -> STRING .

    NUMBER          reduce using rule 67 (valorl -> STRING .)
    ID              reduce using rule 67 (valorl -> STRING .)
    STRING          reduce using rule 67 (valorl -> STRING .)
    FLOAT           reduce using rule 67 (valorl -> STRING .)
    TRUE            reduce using rule 67 (valorl -> STRING .)
    FALSE           reduce using rule 67 (valorl -> STRING .)
    RPAREN          reduce using rule 67 (valorl -> STRING .)
    RCOR            reduce using rule 67 (valorl -> STRING .)
    RBRACE          reduce using rule 67 (valorl -> STRING .)


state 106

    (68) valorl -> booleanos .

    NUMBER          reduce using rule 68 (valorl -> booleanos .)
    ID              reduce using rule 68 (valorl -> booleanos .)
    STRING          reduce using rule 68 (valorl -> booleanos .)
    FLOAT           reduce using rule 68 (valorl -> booleanos .)
    TRUE            reduce using rule 68 (valorl -> booleanos .)
    FALSE           reduce using rule 68 (valorl -> booleanos .)
    RPAREN          reduce using rule 68 (valorl -> booleanos .)
    RCOR            reduce using rule 68 (valorl -> booleanos .)
    RBRACE          reduce using rule 68 (valorl -> booleanos .)


state 107

    (69) valorl -> FLOAT .

    NUMBER          reduce using rule 69 (valorl -> FLOAT .)
    ID              reduce using rule 69 (valorl -> FLOAT .)
    STRING          reduce using rule 69 (valorl -> FLOAT .)
    FLOAT           reduce using rule 69 (valorl -> FLOAT .)
    TRUE            reduce using rule 69 (valorl -> FLOAT .)
    FALSE           reduce using rule 69 (valorl -> FLOAT .)
    RPAREN          reduce using rule 69 (valorl -> FLOAT .)
    RCOR            reduce using rule 69 (valorl -> FLOAT .)
    RBRACE          reduce using rule 69 (valorl -> FLOAT .)


state 108

    (91) asignacion_funcion -> DEFN ID . LCOR RCOR general
    (92) asignacion_funcion -> DEFN ID . LCOR parametros RCOR general

    LCOR            shift and go to state 149


state 109

    (97) function_call -> LPAREN ID argumentos RPAREN .

    LPAREN          reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    $end            reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    RPAREN          reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    NUMBER          reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    ID              reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    STRING          reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    FLOAT           reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    TRUE            reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    FALSE           reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    QUOTE           reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    LCOR            reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    LBRACE          reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    NUMERAL         reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    PLUS            reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    MINUS           reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    TIMES           reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    DIVIDE          reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    MOD             reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    MAYORQUE        reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    MENORQUE        reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    IGUAL           reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    OR              reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    AND             reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)
    NOT             reduce using rule 97 (function_call -> LPAREN ID argumentos RPAREN .)


state 110

    (99) argumentos -> valor_funcion argumentos .

    RPAREN          reduce using rule 99 (argumentos -> valor_funcion argumentos .)


state 111

    (53) lista -> QUOTE LPAREN . valorl RPAREN
    (65) valorl -> . NUMBER
    (66) valorl -> . ID
    (67) valorl -> . STRING
    (68) valorl -> . booleanos
    (69) valorl -> . FLOAT
    (70) valorl -> . valorl valorl
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    NUMBER          shift and go to state 103
    ID              shift and go to state 104
    STRING          shift and go to state 105
    FLOAT           shift and go to state 107
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    valorl                         shift and go to state 150
    booleanos                      shift and go to state 106

state 112

    (54) vector -> LCOR valorl . RCOR
    (70) valorl -> valorl . valorl
    (65) valorl -> . NUMBER
    (66) valorl -> . ID
    (67) valorl -> . STRING
    (68) valorl -> . booleanos
    (69) valorl -> . FLOAT
    (70) valorl -> . valorl valorl
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    RCOR            shift and go to state 151
    NUMBER          shift and go to state 103
    ID              shift and go to state 104
    STRING          shift and go to state 105
    FLOAT           shift and go to state 107
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    valorl                         shift and go to state 148
    booleanos                      shift and go to state 106

state 113

    (55) mapa -> LBRACE repetirclave . RBRACE

    RBRACE          shift and go to state 152


state 114

    (58) repetirclave -> clavevalor .
    (59) repetirclave -> clavevalor . COMA repetirclave

    RBRACE          reduce using rule 58 (repetirclave -> clavevalor .)
    COMA            shift and go to state 153


state 115

    (57) clavevalor -> ID . DDOT valor

    DDOT            shift and go to state 154


state 116

    (56) conjunto -> NUMERAL LBRACE . valorl RBRACE
    (65) valorl -> . NUMBER
    (66) valorl -> . ID
    (67) valorl -> . STRING
    (68) valorl -> . booleanos
    (69) valorl -> . FLOAT
    (70) valorl -> . valorl valorl
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    NUMBER          shift and go to state 103
    ID              shift and go to state 104
    STRING          shift and go to state 105
    FLOAT           shift and go to state 107
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    valorl                         shift and go to state 155
    booleanos                      shift and go to state 106

state 117

    (89) valor_strings -> STRING .

    STRING          reduce using rule 89 (valor_strings -> STRING .)
    ID              reduce using rule 89 (valor_strings -> STRING .)
    RPAREN          reduce using rule 89 (valor_strings -> STRING .)


state 118

    (72) funcionstruct -> LPAREN STR STRING strings . RPAREN

    RPAREN          shift and go to state 156


state 119

    (87) strings -> valor_strings .
    (88) strings -> valor_strings . strings
    (87) strings -> . valor_strings
    (88) strings -> . valor_strings strings
    (89) valor_strings -> . STRING
    (90) valor_strings -> . ID

    RPAREN          reduce using rule 87 (strings -> valor_strings .)
    STRING          shift and go to state 117
    ID              shift and go to state 120

    valor_strings                  shift and go to state 119
    strings                        shift and go to state 157

state 120

    (90) valor_strings -> ID .

    STRING          reduce using rule 90 (valor_strings -> ID .)
    ID              reduce using rule 90 (valor_strings -> ID .)
    RPAREN          reduce using rule 90 (valor_strings -> ID .)


state 121

    (73) funcionstruct -> LPAREN STR ID strings . RPAREN

    RPAREN          shift and go to state 158


state 122

    (74) funcionstruct -> LPAREN GET conjunto NUMBER . RPAREN

    RPAREN          shift and go to state 159


state 123

    (75) funcionstruct -> LPAREN GET conjunto ID . RPAREN

    RPAREN          shift and go to state 160


state 124

    (76) funcionstruct -> LPAREN NTH lista NUMBER . RPAREN

    RPAREN          shift and go to state 161


state 125

    (77) funcionstruct -> LPAREN NTH lista ID . RPAREN

    RPAREN          shift and go to state 162


state 126

    (78) funcionstruct -> LPAREN POP vector RPAREN .

    LPAREN          reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    $end            reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    RPAREN          reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    NUMBER          reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    ID              reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    STRING          reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    FLOAT           reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    TRUE            reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    FALSE           reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    QUOTE           reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    LCOR            reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    LBRACE          reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    NUMERAL         reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    PLUS            reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    MINUS           reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    TIMES           reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    DIVIDE          reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    MOD             reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    MAYORQUE        reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    MENORQUE        reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    IGUAL           reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    OR              reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    AND             reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)
    NOT             reduce using rule 78 (funcionstruct -> LPAREN POP vector RPAREN .)


state 127

    (79) funcionstruct -> LPAREN COUNT STRING RPAREN .

    LPAREN          reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    $end            reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    RPAREN          reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    NUMBER          reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    ID              reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    STRING          reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    FLOAT           reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    TRUE            reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    FALSE           reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    QUOTE           reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    LCOR            reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    LBRACE          reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    NUMERAL         reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    PLUS            reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    MINUS           reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    TIMES           reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    DIVIDE          reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    MOD             reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    MAYORQUE        reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    MENORQUE        reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    IGUAL           reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    OR              reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    AND             reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)
    NOT             reduce using rule 79 (funcionstruct -> LPAREN COUNT STRING RPAREN .)


state 128

    (80) funcionstruct -> LPAREN COUNT ID RPAREN .

    LPAREN          reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    $end            reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    RPAREN          reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    NUMBER          reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    ID              reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    STRING          reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    FLOAT           reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    TRUE            reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    FALSE           reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    QUOTE           reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    LCOR            reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    LBRACE          reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    NUMERAL         reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    PLUS            reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    MINUS           reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    TIMES           reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    DIVIDE          reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    MOD             reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    MAYORQUE        reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    MENORQUE        reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    IGUAL           reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    OR              reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    AND             reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)
    NOT             reduce using rule 80 (funcionstruct -> LPAREN COUNT ID RPAREN .)


state 129

    (45) sentenciado -> LPAREN DO general RPAREN .

    LPAREN          reduce using rule 45 (sentenciado -> LPAREN DO general RPAREN .)
    $end            reduce using rule 45 (sentenciado -> LPAREN DO general RPAREN .)
    RPAREN          reduce using rule 45 (sentenciado -> LPAREN DO general RPAREN .)


state 130

    (81) conjfunction -> LPAREN CONJ lista NUMBER . RPAREN

    RPAREN          shift and go to state 163


state 131

    (82) conjfunction -> LPAREN CONJ lista ID . RPAREN

    RPAREN          shift and go to state 164


state 132

    (83) conjfunction -> LPAREN CONJ conjunto NUMBER . RPAREN

    RPAREN          shift and go to state 165


state 133

    (84) conjfunction -> LPAREN CONJ conjunto ID . RPAREN

    RPAREN          shift and go to state 166


state 134

    (85) conjfunction -> LPAREN CONJ vector NUMBER . RPAREN

    RPAREN          shift and go to state 167


state 135

    (86) conjfunction -> LPAREN CONJ vector ID . RPAREN

    RPAREN          shift and go to state 168


state 136

    (13) expression -> operadoresMat factor factor .

    RPAREN          reduce using rule 13 (expression -> operadoresMat factor factor .)
    NUMBER          reduce using rule 13 (expression -> operadoresMat factor factor .)
    ID              reduce using rule 13 (expression -> operadoresMat factor factor .)
    STRING          reduce using rule 13 (expression -> operadoresMat factor factor .)
    FLOAT           reduce using rule 13 (expression -> operadoresMat factor factor .)
    LPAREN          reduce using rule 13 (expression -> operadoresMat factor factor .)
    TRUE            reduce using rule 13 (expression -> operadoresMat factor factor .)
    FALSE           reduce using rule 13 (expression -> operadoresMat factor factor .)
    QUOTE           reduce using rule 13 (expression -> operadoresMat factor factor .)
    LCOR            reduce using rule 13 (expression -> operadoresMat factor factor .)
    LBRACE          reduce using rule 13 (expression -> operadoresMat factor factor .)
    NUMERAL         reduce using rule 13 (expression -> operadoresMat factor factor .)
    PLUS            reduce using rule 13 (expression -> operadoresMat factor factor .)
    MINUS           reduce using rule 13 (expression -> operadoresMat factor factor .)
    TIMES           reduce using rule 13 (expression -> operadoresMat factor factor .)
    DIVIDE          reduce using rule 13 (expression -> operadoresMat factor factor .)
    MOD             reduce using rule 13 (expression -> operadoresMat factor factor .)
    MAYORQUE        reduce using rule 13 (expression -> operadoresMat factor factor .)
    MENORQUE        reduce using rule 13 (expression -> operadoresMat factor factor .)
    IGUAL           reduce using rule 13 (expression -> operadoresMat factor factor .)
    OR              reduce using rule 13 (expression -> operadoresMat factor factor .)
    AND             reduce using rule 13 (expression -> operadoresMat factor factor .)
    NOT             reduce using rule 13 (expression -> operadoresMat factor factor .)


state 137

    (33) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 169


state 138

    (14) comparacion -> operadoresComp factor factor .

    RPAREN          reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    NUMBER          reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    ID              reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    STRING          reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    FLOAT           reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    LPAREN          reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    TRUE            reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    FALSE           reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    QUOTE           reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    LCOR            reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    LBRACE          reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    NUMERAL         reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    PLUS            reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    MINUS           reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    TIMES           reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    DIVIDE          reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    MOD             reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    MAYORQUE        reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    MENORQUE        reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    IGUAL           reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    OR              reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    AND             reduce using rule 14 (comparacion -> operadoresComp factor factor .)
    NOT             reduce using rule 14 (comparacion -> operadoresComp factor factor .)


state 139

    (46) sentenciaif -> IF LPAREN comparacion . RPAREN general
    (47) sentenciaif -> IF LPAREN comparacion . RPAREN sentenciado sentenciado

    RPAREN          shift and go to state 170


state 140

    (48) sentenciawhile -> WHILE LPAREN comparacion . RPAREN sentenciado

    RPAREN          shift and go to state 171


state 141

    (34) asignacion -> DEF ID factor .

    RPAREN          reduce using rule 34 (asignacion -> DEF ID factor .)


state 142

    (35) asignacion -> DEF ID STRING .

    RPAREN          reduce using rule 35 (asignacion -> DEF ID STRING .)


state 143

    (36) asignacion -> DEF ID struct .

    RPAREN          reduce using rule 36 (asignacion -> DEF ID struct .)


state 144

    (37) asignacion -> DEF ID funcionstruct .

    RPAREN          reduce using rule 37 (asignacion -> DEF ID funcionstruct .)


state 145

    (38) asignacion -> DEF ID read .

    RPAREN          reduce using rule 38 (asignacion -> DEF ID read .)


state 146

    (39) asignacion -> DEF ID function_call .

    RPAREN          reduce using rule 39 (asignacion -> DEF ID function_call .)


state 147

    (33) factor -> LPAREN . expression RPAREN
    (72) funcionstruct -> LPAREN . STR STRING strings RPAREN
    (73) funcionstruct -> LPAREN . STR ID strings RPAREN
    (74) funcionstruct -> LPAREN . GET conjunto NUMBER RPAREN
    (75) funcionstruct -> LPAREN . GET conjunto ID RPAREN
    (76) funcionstruct -> LPAREN . NTH lista NUMBER RPAREN
    (77) funcionstruct -> LPAREN . NTH lista ID RPAREN
    (78) funcionstruct -> LPAREN . POP vector RPAREN
    (79) funcionstruct -> LPAREN . COUNT STRING RPAREN
    (80) funcionstruct -> LPAREN . COUNT ID RPAREN
    (28) read -> LPAREN . READ RPAREN
    (96) function_call -> LPAREN . ID RPAREN
    (97) function_call -> LPAREN . ID argumentos RPAREN
    (81) conjfunction -> LPAREN . CONJ lista NUMBER RPAREN
    (82) conjfunction -> LPAREN . CONJ lista ID RPAREN
    (83) conjfunction -> LPAREN . CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> LPAREN . CONJ conjunto ID RPAREN
    (85) conjfunction -> LPAREN . CONJ vector NUMBER RPAREN
    (86) conjfunction -> LPAREN . CONJ vector ID RPAREN
    (13) expression -> . operadoresMat factor factor
    (15) operadoresMat -> . PLUS
    (16) operadoresMat -> . MINUS
    (17) operadoresMat -> . TIMES
    (18) operadoresMat -> . DIVIDE
    (19) operadoresMat -> . MOD

    STR             shift and go to state 17
    GET             shift and go to state 18
    NTH             shift and go to state 19
    POP             shift and go to state 20
    COUNT           shift and go to state 21
    READ            shift and go to state 23
    ID              shift and go to state 16
    CONJ            shift and go to state 24
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37

    expression                     shift and go to state 137
    operadoresMat                  shift and go to state 25

state 148

    (70) valorl -> valorl valorl .
    (70) valorl -> valorl . valorl
    (65) valorl -> . NUMBER
    (66) valorl -> . ID
    (67) valorl -> . STRING
    (68) valorl -> . booleanos
    (69) valorl -> . FLOAT
    (70) valorl -> . valorl valorl
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 70 (valorl -> valorl valorl .)
    RCOR            reduce using rule 70 (valorl -> valorl valorl .)
    RBRACE          reduce using rule 70 (valorl -> valorl valorl .)
    NUMBER          shift and go to state 103
    ID              shift and go to state 104
    STRING          shift and go to state 105
    FLOAT           shift and go to state 107
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

  ! NUMBER          [ reduce using rule 70 (valorl -> valorl valorl .) ]
  ! ID              [ reduce using rule 70 (valorl -> valorl valorl .) ]
  ! STRING          [ reduce using rule 70 (valorl -> valorl valorl .) ]
  ! FLOAT           [ reduce using rule 70 (valorl -> valorl valorl .) ]
  ! TRUE            [ reduce using rule 70 (valorl -> valorl valorl .) ]
  ! FALSE           [ reduce using rule 70 (valorl -> valorl valorl .) ]

    valorl                         shift and go to state 148
    booleanos                      shift and go to state 106

state 149

    (91) asignacion_funcion -> DEFN ID LCOR . RCOR general
    (92) asignacion_funcion -> DEFN ID LCOR . parametros RCOR general
    (93) parametros -> . valores
    (94) valores -> . ID
    (95) valores -> . ID valores

    RCOR            shift and go to state 173
    ID              shift and go to state 172

    parametros                     shift and go to state 174
    valores                        shift and go to state 175

state 150

    (53) lista -> QUOTE LPAREN valorl . RPAREN
    (70) valorl -> valorl . valorl
    (65) valorl -> . NUMBER
    (66) valorl -> . ID
    (67) valorl -> . STRING
    (68) valorl -> . booleanos
    (69) valorl -> . FLOAT
    (70) valorl -> . valorl valorl
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    RPAREN          shift and go to state 176
    NUMBER          shift and go to state 103
    ID              shift and go to state 104
    STRING          shift and go to state 105
    FLOAT           shift and go to state 107
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    valorl                         shift and go to state 148
    booleanos                      shift and go to state 106

state 151

    (54) vector -> LCOR valorl RCOR .

    NUMBER          reduce using rule 54 (vector -> LCOR valorl RCOR .)
    ID              reduce using rule 54 (vector -> LCOR valorl RCOR .)
    STRING          reduce using rule 54 (vector -> LCOR valorl RCOR .)
    FLOAT           reduce using rule 54 (vector -> LCOR valorl RCOR .)
    LPAREN          reduce using rule 54 (vector -> LCOR valorl RCOR .)
    TRUE            reduce using rule 54 (vector -> LCOR valorl RCOR .)
    FALSE           reduce using rule 54 (vector -> LCOR valorl RCOR .)
    QUOTE           reduce using rule 54 (vector -> LCOR valorl RCOR .)
    LCOR            reduce using rule 54 (vector -> LCOR valorl RCOR .)
    LBRACE          reduce using rule 54 (vector -> LCOR valorl RCOR .)
    NUMERAL         reduce using rule 54 (vector -> LCOR valorl RCOR .)
    PLUS            reduce using rule 54 (vector -> LCOR valorl RCOR .)
    MINUS           reduce using rule 54 (vector -> LCOR valorl RCOR .)
    TIMES           reduce using rule 54 (vector -> LCOR valorl RCOR .)
    DIVIDE          reduce using rule 54 (vector -> LCOR valorl RCOR .)
    MOD             reduce using rule 54 (vector -> LCOR valorl RCOR .)
    MAYORQUE        reduce using rule 54 (vector -> LCOR valorl RCOR .)
    MENORQUE        reduce using rule 54 (vector -> LCOR valorl RCOR .)
    IGUAL           reduce using rule 54 (vector -> LCOR valorl RCOR .)
    OR              reduce using rule 54 (vector -> LCOR valorl RCOR .)
    AND             reduce using rule 54 (vector -> LCOR valorl RCOR .)
    NOT             reduce using rule 54 (vector -> LCOR valorl RCOR .)
    RPAREN          reduce using rule 54 (vector -> LCOR valorl RCOR .)


state 152

    (55) mapa -> LBRACE repetirclave RBRACE .

    NUMBER          reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    ID              reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    STRING          reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    FLOAT           reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    LPAREN          reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    TRUE            reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    FALSE           reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    QUOTE           reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    LCOR            reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    LBRACE          reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    NUMERAL         reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    PLUS            reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    MINUS           reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    TIMES           reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    DIVIDE          reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    MOD             reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    MAYORQUE        reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    MENORQUE        reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    IGUAL           reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    OR              reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    AND             reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    NOT             reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)
    RPAREN          reduce using rule 55 (mapa -> LBRACE repetirclave RBRACE .)


state 153

    (59) repetirclave -> clavevalor COMA . repetirclave
    (58) repetirclave -> . clavevalor
    (59) repetirclave -> . clavevalor COMA repetirclave
    (57) clavevalor -> . ID DDOT valor

    ID              shift and go to state 115

    clavevalor                     shift and go to state 114
    repetirclave                   shift and go to state 177

state 154

    (57) clavevalor -> ID DDOT . valor
    (60) valor -> . NUMBER
    (61) valor -> . ID
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    NUMBER          shift and go to state 64
    ID              shift and go to state 54
    STRING          shift and go to state 65
    FLOAT           shift and go to state 67
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    valor                          shift and go to state 178
    booleanos                      shift and go to state 66

state 155

    (56) conjunto -> NUMERAL LBRACE valorl . RBRACE
    (70) valorl -> valorl . valorl
    (65) valorl -> . NUMBER
    (66) valorl -> . ID
    (67) valorl -> . STRING
    (68) valorl -> . booleanos
    (69) valorl -> . FLOAT
    (70) valorl -> . valorl valorl
    (40) booleanos -> . TRUE
    (41) booleanos -> . FALSE

    RBRACE          shift and go to state 179
    NUMBER          shift and go to state 103
    ID              shift and go to state 104
    STRING          shift and go to state 105
    FLOAT           shift and go to state 107
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    valorl                         shift and go to state 148
    booleanos                      shift and go to state 106

state 156

    (72) funcionstruct -> LPAREN STR STRING strings RPAREN .

    LPAREN          reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    $end            reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    RPAREN          reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    NUMBER          reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    ID              reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    STRING          reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    FLOAT           reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    TRUE            reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    FALSE           reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    QUOTE           reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    LCOR            reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    LBRACE          reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    NUMERAL         reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    PLUS            reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    MINUS           reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    TIMES           reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    DIVIDE          reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    MOD             reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    MAYORQUE        reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    MENORQUE        reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    IGUAL           reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    OR              reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    AND             reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)
    NOT             reduce using rule 72 (funcionstruct -> LPAREN STR STRING strings RPAREN .)


state 157

    (88) strings -> valor_strings strings .

    RPAREN          reduce using rule 88 (strings -> valor_strings strings .)


state 158

    (73) funcionstruct -> LPAREN STR ID strings RPAREN .

    LPAREN          reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    $end            reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    RPAREN          reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    NUMBER          reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    ID              reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    STRING          reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    FLOAT           reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    TRUE            reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    FALSE           reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    QUOTE           reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    LCOR            reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    LBRACE          reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    NUMERAL         reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    PLUS            reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    MINUS           reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    TIMES           reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    DIVIDE          reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    MOD             reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    MAYORQUE        reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    MENORQUE        reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    IGUAL           reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    OR              reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    AND             reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)
    NOT             reduce using rule 73 (funcionstruct -> LPAREN STR ID strings RPAREN .)


state 159

    (74) funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .

    LPAREN          reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    $end            reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    RPAREN          reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    NUMBER          reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    ID              reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    STRING          reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    FLOAT           reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    TRUE            reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    FALSE           reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    QUOTE           reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    LCOR            reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    LBRACE          reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    NUMERAL         reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    PLUS            reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    MINUS           reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    TIMES           reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    DIVIDE          reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    MOD             reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    MAYORQUE        reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    MENORQUE        reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    IGUAL           reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    OR              reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    AND             reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)
    NOT             reduce using rule 74 (funcionstruct -> LPAREN GET conjunto NUMBER RPAREN .)


state 160

    (75) funcionstruct -> LPAREN GET conjunto ID RPAREN .

    LPAREN          reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    $end            reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    RPAREN          reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    NUMBER          reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    ID              reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    STRING          reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    FLOAT           reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    TRUE            reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    FALSE           reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    QUOTE           reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    LCOR            reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    LBRACE          reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    NUMERAL         reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    PLUS            reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    MINUS           reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    TIMES           reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    DIVIDE          reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    MOD             reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    MAYORQUE        reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    MENORQUE        reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    IGUAL           reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    OR              reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    AND             reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)
    NOT             reduce using rule 75 (funcionstruct -> LPAREN GET conjunto ID RPAREN .)


state 161

    (76) funcionstruct -> LPAREN NTH lista NUMBER RPAREN .

    LPAREN          reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    $end            reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    RPAREN          reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    NUMBER          reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    ID              reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    STRING          reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    FLOAT           reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    TRUE            reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    FALSE           reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    QUOTE           reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    LCOR            reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    LBRACE          reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    NUMERAL         reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    PLUS            reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    MINUS           reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    TIMES           reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    DIVIDE          reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    MOD             reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    MAYORQUE        reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    MENORQUE        reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    IGUAL           reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    OR              reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    AND             reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)
    NOT             reduce using rule 76 (funcionstruct -> LPAREN NTH lista NUMBER RPAREN .)


state 162

    (77) funcionstruct -> LPAREN NTH lista ID RPAREN .

    LPAREN          reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    $end            reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    RPAREN          reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    NUMBER          reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    ID              reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    STRING          reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    FLOAT           reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    TRUE            reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    FALSE           reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    QUOTE           reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    LCOR            reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    LBRACE          reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    NUMERAL         reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    PLUS            reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    MINUS           reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    TIMES           reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    DIVIDE          reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    MOD             reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    MAYORQUE        reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    MENORQUE        reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    IGUAL           reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    OR              reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    AND             reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)
    NOT             reduce using rule 77 (funcionstruct -> LPAREN NTH lista ID RPAREN .)


state 163

    (81) conjfunction -> LPAREN CONJ lista NUMBER RPAREN .

    LPAREN          reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    $end            reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    RPAREN          reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    NUMBER          reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    ID              reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    STRING          reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    FLOAT           reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    TRUE            reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    FALSE           reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    QUOTE           reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    LCOR            reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    LBRACE          reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    NUMERAL         reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    PLUS            reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    MINUS           reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    TIMES           reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    DIVIDE          reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    MOD             reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    MAYORQUE        reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    MENORQUE        reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    IGUAL           reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    OR              reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    AND             reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)
    NOT             reduce using rule 81 (conjfunction -> LPAREN CONJ lista NUMBER RPAREN .)


state 164

    (82) conjfunction -> LPAREN CONJ lista ID RPAREN .

    LPAREN          reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    $end            reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    RPAREN          reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    NUMBER          reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    ID              reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    STRING          reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    FLOAT           reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    TRUE            reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    FALSE           reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    QUOTE           reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    LCOR            reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    LBRACE          reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    NUMERAL         reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    PLUS            reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    MINUS           reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    TIMES           reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    DIVIDE          reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    MOD             reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    MAYORQUE        reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    MENORQUE        reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    IGUAL           reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    OR              reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    AND             reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)
    NOT             reduce using rule 82 (conjfunction -> LPAREN CONJ lista ID RPAREN .)


state 165

    (83) conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .

    LPAREN          reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    $end            reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    RPAREN          reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    NUMBER          reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    ID              reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    STRING          reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    FLOAT           reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    TRUE            reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    FALSE           reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    QUOTE           reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    LCOR            reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    LBRACE          reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    NUMERAL         reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    PLUS            reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    MINUS           reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    TIMES           reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    DIVIDE          reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    MOD             reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    MAYORQUE        reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    MENORQUE        reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    IGUAL           reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    OR              reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    AND             reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)
    NOT             reduce using rule 83 (conjfunction -> LPAREN CONJ conjunto NUMBER RPAREN .)


state 166

    (84) conjfunction -> LPAREN CONJ conjunto ID RPAREN .

    LPAREN          reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    $end            reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    RPAREN          reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    NUMBER          reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    ID              reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    STRING          reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    FLOAT           reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    TRUE            reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    FALSE           reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    QUOTE           reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    LCOR            reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    LBRACE          reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    NUMERAL         reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    PLUS            reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    MINUS           reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    TIMES           reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    DIVIDE          reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    MOD             reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    MAYORQUE        reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    MENORQUE        reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    IGUAL           reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    OR              reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    AND             reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)
    NOT             reduce using rule 84 (conjfunction -> LPAREN CONJ conjunto ID RPAREN .)


state 167

    (85) conjfunction -> LPAREN CONJ vector NUMBER RPAREN .

    LPAREN          reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    $end            reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    RPAREN          reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    NUMBER          reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    ID              reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    STRING          reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    FLOAT           reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    TRUE            reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    FALSE           reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    QUOTE           reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    LCOR            reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    LBRACE          reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    NUMERAL         reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    PLUS            reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    MINUS           reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    TIMES           reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    DIVIDE          reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    MOD             reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    MAYORQUE        reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    MENORQUE        reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    IGUAL           reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    OR              reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    AND             reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)
    NOT             reduce using rule 85 (conjfunction -> LPAREN CONJ vector NUMBER RPAREN .)


state 168

    (86) conjfunction -> LPAREN CONJ vector ID RPAREN .

    LPAREN          reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    $end            reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    RPAREN          reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    NUMBER          reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    ID              reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    STRING          reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    FLOAT           reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    TRUE            reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    FALSE           reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    QUOTE           reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    LCOR            reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    LBRACE          reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    NUMERAL         reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    PLUS            reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    MINUS           reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    TIMES           reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    DIVIDE          reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    MOD             reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    MAYORQUE        reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    MENORQUE        reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    IGUAL           reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    OR              reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    AND             reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)
    NOT             reduce using rule 86 (conjfunction -> LPAREN CONJ vector ID RPAREN .)


state 169

    (33) factor -> LPAREN expression RPAREN .

    NUMBER          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    STRING          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    QUOTE           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    LCOR            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    NUMERAL         reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    MAYORQUE        reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    MENORQUE        reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    IGUAL           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 33 (factor -> LPAREN expression RPAREN .)


state 170

    (46) sentenciaif -> IF LPAREN comparacion RPAREN . general
    (47) sentenciaif -> IF LPAREN comparacion RPAREN . sentenciado sentenciado
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (45) sentenciado -> . LPAREN DO general RPAREN
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    LPAREN          shift and go to state 180

    general                        shift and go to state 181
    sentenciado                    shift and go to state 182
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 171

    (48) sentenciawhile -> WHILE LPAREN comparacion RPAREN . sentenciado
    (45) sentenciado -> . LPAREN DO general RPAREN

    LPAREN          shift and go to state 183

    sentenciado                    shift and go to state 184

state 172

    (94) valores -> ID .
    (95) valores -> ID . valores
    (94) valores -> . ID
    (95) valores -> . ID valores

    RCOR            reduce using rule 94 (valores -> ID .)
    ID              shift and go to state 172

    valores                        shift and go to state 185

state 173

    (91) asignacion_funcion -> DEFN ID LCOR RCOR . general
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    LPAREN          shift and go to state 2

    general                        shift and go to state 186
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 174

    (92) asignacion_funcion -> DEFN ID LCOR parametros . RCOR general

    RCOR            shift and go to state 187


state 175

    (93) parametros -> valores .

    RCOR            reduce using rule 93 (parametros -> valores .)


state 176

    (53) lista -> QUOTE LPAREN valorl RPAREN .

    NUMBER          reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    ID              reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    STRING          reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    FLOAT           reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    LPAREN          reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    TRUE            reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    FALSE           reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    QUOTE           reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    LCOR            reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    LBRACE          reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    NUMERAL         reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    PLUS            reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    MINUS           reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    TIMES           reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    DIVIDE          reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    MOD             reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    MAYORQUE        reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    MENORQUE        reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    IGUAL           reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    OR              reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    AND             reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    NOT             reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)
    RPAREN          reduce using rule 53 (lista -> QUOTE LPAREN valorl RPAREN .)


state 177

    (59) repetirclave -> clavevalor COMA repetirclave .

    RBRACE          reduce using rule 59 (repetirclave -> clavevalor COMA repetirclave .)


state 178

    (57) clavevalor -> ID DDOT valor .

    COMA            reduce using rule 57 (clavevalor -> ID DDOT valor .)
    RBRACE          reduce using rule 57 (clavevalor -> ID DDOT valor .)


state 179

    (56) conjunto -> NUMERAL LBRACE valorl RBRACE .

    NUMBER          reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    ID              reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    STRING          reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    FLOAT           reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    LPAREN          reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    TRUE            reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    FALSE           reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    QUOTE           reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    LCOR            reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    LBRACE          reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    NUMERAL         reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    PLUS            reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    MINUS           reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    TIMES           reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    DIVIDE          reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    MOD             reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    MAYORQUE        reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    MENORQUE        reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    IGUAL           reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    OR              reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    AND             reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    NOT             reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)
    RPAREN          reduce using rule 56 (conjunto -> NUMERAL LBRACE valorl RBRACE .)


state 180

    (1) general -> LPAREN . expression RPAREN
    (2) general -> LPAREN . comparacion RPAREN
    (3) general -> LPAREN . sentenciaif RPAREN
    (4) general -> LPAREN . sentenciawhile RPAREN
    (5) general -> LPAREN . asignacion RPAREN
    (6) general -> LPAREN . imprimir RPAREN
    (7) general -> LPAREN . asignacion_funcion RPAREN
    (45) sentenciado -> LPAREN . DO general RPAREN
    (96) function_call -> LPAREN . ID RPAREN
    (97) function_call -> LPAREN . ID argumentos RPAREN
    (72) funcionstruct -> LPAREN . STR STRING strings RPAREN
    (73) funcionstruct -> LPAREN . STR ID strings RPAREN
    (74) funcionstruct -> LPAREN . GET conjunto NUMBER RPAREN
    (75) funcionstruct -> LPAREN . GET conjunto ID RPAREN
    (76) funcionstruct -> LPAREN . NTH lista NUMBER RPAREN
    (77) funcionstruct -> LPAREN . NTH lista ID RPAREN
    (78) funcionstruct -> LPAREN . POP vector RPAREN
    (79) funcionstruct -> LPAREN . COUNT STRING RPAREN
    (80) funcionstruct -> LPAREN . COUNT ID RPAREN
    (28) read -> LPAREN . READ RPAREN
    (81) conjfunction -> LPAREN . CONJ lista NUMBER RPAREN
    (82) conjfunction -> LPAREN . CONJ lista ID RPAREN
    (83) conjfunction -> LPAREN . CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> LPAREN . CONJ conjunto ID RPAREN
    (85) conjfunction -> LPAREN . CONJ vector NUMBER RPAREN
    (86) conjfunction -> LPAREN . CONJ vector ID RPAREN
    (13) expression -> . operadoresMat factor factor
    (14) comparacion -> . operadoresComp factor factor
    (46) sentenciaif -> . IF LPAREN comparacion RPAREN general
    (47) sentenciaif -> . IF LPAREN comparacion RPAREN sentenciado sentenciado
    (48) sentenciawhile -> . WHILE LPAREN comparacion RPAREN sentenciado
    (34) asignacion -> . DEF ID factor
    (35) asignacion -> . DEF ID STRING
    (36) asignacion -> . DEF ID struct
    (37) asignacion -> . DEF ID funcionstruct
    (38) asignacion -> . DEF ID read
    (39) asignacion -> . DEF ID function_call
    (42) imprimir -> . operadoresPrint factor
    (43) imprimir -> . operadoresPrint STRING
    (44) imprimir -> . PRINTF valorl
    (91) asignacion_funcion -> . DEFN ID LCOR RCOR general
    (92) asignacion_funcion -> . DEFN ID LCOR parametros RCOR general
    (15) operadoresMat -> . PLUS
    (16) operadoresMat -> . MINUS
    (17) operadoresMat -> . TIMES
    (18) operadoresMat -> . DIVIDE
    (19) operadoresMat -> . MOD
    (20) operadoresComp -> . MAYORQUE
    (21) operadoresComp -> . MENORQUE
    (22) operadoresComp -> . IGUAL
    (23) operadoresComp -> . OR
    (24) operadoresComp -> . AND
    (25) operadoresComp -> . NOT
    (26) operadoresPrint -> . PRINT
    (27) operadoresPrint -> . PRINTLN

    DO              shift and go to state 22
    ID              shift and go to state 16
    STR             shift and go to state 17
    GET             shift and go to state 18
    NTH             shift and go to state 19
    POP             shift and go to state 20
    COUNT           shift and go to state 21
    READ            shift and go to state 23
    CONJ            shift and go to state 24
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    DEF             shift and go to state 29
    PRINTF          shift and go to state 31
    DEFN            shift and go to state 32
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    MAYORQUE        shift and go to state 38
    MENORQUE        shift and go to state 39
    IGUAL           shift and go to state 40
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    PRINTLN         shift and go to state 45

    expression                     shift and go to state 9
    comparacion                    shift and go to state 10
    sentenciaif                    shift and go to state 11
    sentenciawhile                 shift and go to state 12
    asignacion                     shift and go to state 13
    imprimir                       shift and go to state 14
    asignacion_funcion             shift and go to state 15
    operadoresMat                  shift and go to state 25
    operadoresComp                 shift and go to state 26
    operadoresPrint                shift and go to state 30

state 181

    (46) sentenciaif -> IF LPAREN comparacion RPAREN general .
    (12) general -> general . general
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    RPAREN          reduce using rule 46 (sentenciaif -> IF LPAREN comparacion RPAREN general .)
    LPAREN          shift and go to state 2

    general                        shift and go to state 8
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 182

    (47) sentenciaif -> IF LPAREN comparacion RPAREN sentenciado . sentenciado
    (10) general -> sentenciado .
    (45) sentenciado -> . LPAREN DO general RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 10 (general -> sentenciado .)
    LPAREN          shift and go to state 183

  ! LPAREN          [ reduce using rule 10 (general -> sentenciado .) ]

    sentenciado                    shift and go to state 188

state 183

    (45) sentenciado -> LPAREN . DO general RPAREN

    DO              shift and go to state 22


state 184

    (48) sentenciawhile -> WHILE LPAREN comparacion RPAREN sentenciado .

    RPAREN          reduce using rule 48 (sentenciawhile -> WHILE LPAREN comparacion RPAREN sentenciado .)


state 185

    (95) valores -> ID valores .

    RCOR            reduce using rule 95 (valores -> ID valores .)


state 186

    (91) asignacion_funcion -> DEFN ID LCOR RCOR general .
    (12) general -> general . general
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    RPAREN          reduce using rule 91 (asignacion_funcion -> DEFN ID LCOR RCOR general .)
    LPAREN          shift and go to state 2

    general                        shift and go to state 8
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 187

    (92) asignacion_funcion -> DEFN ID LCOR parametros RCOR . general
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    LPAREN          shift and go to state 2

    general                        shift and go to state 189
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7

state 188

    (47) sentenciaif -> IF LPAREN comparacion RPAREN sentenciado sentenciado .

    RPAREN          reduce using rule 47 (sentenciaif -> IF LPAREN comparacion RPAREN sentenciado sentenciado .)


state 189

    (92) asignacion_funcion -> DEFN ID LCOR parametros RCOR general .
    (12) general -> general . general
    (1) general -> . LPAREN expression RPAREN
    (2) general -> . LPAREN comparacion RPAREN
    (3) general -> . LPAREN sentenciaif RPAREN
    (4) general -> . LPAREN sentenciawhile RPAREN
    (5) general -> . LPAREN asignacion RPAREN
    (6) general -> . LPAREN imprimir RPAREN
    (7) general -> . LPAREN asignacion_funcion RPAREN
    (8) general -> . function_call
    (9) general -> . funcionstruct
    (10) general -> . sentenciado
    (11) general -> . read
    (12) general -> . general general
    (96) function_call -> . LPAREN ID RPAREN
    (97) function_call -> . LPAREN ID argumentos RPAREN
    (71) funcionstruct -> . conjfunction
    (72) funcionstruct -> . LPAREN STR STRING strings RPAREN
    (73) funcionstruct -> . LPAREN STR ID strings RPAREN
    (74) funcionstruct -> . LPAREN GET conjunto NUMBER RPAREN
    (75) funcionstruct -> . LPAREN GET conjunto ID RPAREN
    (76) funcionstruct -> . LPAREN NTH lista NUMBER RPAREN
    (77) funcionstruct -> . LPAREN NTH lista ID RPAREN
    (78) funcionstruct -> . LPAREN POP vector RPAREN
    (79) funcionstruct -> . LPAREN COUNT STRING RPAREN
    (80) funcionstruct -> . LPAREN COUNT ID RPAREN
    (45) sentenciado -> . LPAREN DO general RPAREN
    (28) read -> . LPAREN READ RPAREN
    (81) conjfunction -> . LPAREN CONJ lista NUMBER RPAREN
    (82) conjfunction -> . LPAREN CONJ lista ID RPAREN
    (83) conjfunction -> . LPAREN CONJ conjunto NUMBER RPAREN
    (84) conjfunction -> . LPAREN CONJ conjunto ID RPAREN
    (85) conjfunction -> . LPAREN CONJ vector NUMBER RPAREN
    (86) conjfunction -> . LPAREN CONJ vector ID RPAREN

    RPAREN          reduce using rule 92 (asignacion_funcion -> DEFN ID LCOR parametros RCOR general .)
    LPAREN          shift and go to state 2

    general                        shift and go to state 8
    function_call                  shift and go to state 3
    funcionstruct                  shift and go to state 4
    sentenciado                    shift and go to state 5
    read                           shift and go to state 6
    conjfunction                   shift and go to state 7
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 8 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 148 resolved as shift
WARNING: shift/reduce conflict for ID in state 148 resolved as shift
WARNING: shift/reduce conflict for STRING in state 148 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 148 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 148 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 148 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 182 resolved as shift
